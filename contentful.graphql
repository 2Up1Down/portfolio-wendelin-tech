# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
}

interface Entry {
    contentfulMetadata: ContentfulMetadata!
    sys: Sys!
}

union RoomRoomType = Kitchen | OtherRoomType | RoomTypeBathroom | RoomTypeBedroom | RoomTypeLivingRoom | RoomTypeStoreroom

"Represents a binary file in a space. An asset can be any file type."
type Asset {
    contentType(locale: String): String
    contentfulMetadata: ContentfulMetadata!
    description(locale: String): String
    fileName(locale: String): String
    height(locale: String): Int
    linkedFrom(allowedLocales: [String]): AssetLinkingCollections
    size(locale: String): Int
    sys: Sys!
    title(locale: String): String
    url(locale: String, transform: ImageTransformOptions): String
    width(locale: String): Int
}

type AssetCollection {
    items: [Asset]!
    limit: Int!
    skip: Int!
    total: Int!
}

type AssetLinkingCollections {
    brandCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): BrandCollection
    contentTypeLocationCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ContentTypeLocationCollection
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
    roomCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): RoomCollection
    seoDataCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): SeoDataCollection
    textCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): TextCollection
    unitCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): UnitCollection
}

"[See type definition](https://app.contentful.com/spaces/7jl72tq3q532/content_types/brand)"
type Brand implements Entry {
    brand(locale: String): String
    contentfulMetadata: ContentfulMetadata!
    linkedFrom(allowedLocales: [String]): BrandLinkingCollections
    logo(locale: String, preview: Boolean): Asset
    sys: Sys!
}

type BrandCollection {
    items: [Brand]!
    limit: Int!
    skip: Int!
    total: Int!
}

type BrandLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
    layoutCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): LayoutCollection
}

"[See type definition](https://app.contentful.com/spaces/7jl72tq3q532/content_types/contactInformation)"
type ContactInformation implements Entry {
    city(locale: String): String
    companyName(locale: String): String
    contentfulMetadata: ContentfulMetadata!
    country(locale: String): String
    email(locale: String): String
    linkedFrom(allowedLocales: [String]): ContactInformationLinkingCollections
    phoneNumber(locale: String): String
    street(locale: String): String
    sys: Sys!
    zipCode(locale: String): String
}

type ContactInformationCollection {
    items: [ContactInformation]!
    limit: Int!
    skip: Int!
    total: Int!
}

type ContactInformationLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
    footerCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): FooterCollection
}

"[See type definition](https://app.contentful.com/spaces/7jl72tq3q532/content_types/location)"
type ContentTypeLocation implements Entry {
    city(locale: String): String
    contentfulMetadata: ContentfulMetadata!
    coordinates(locale: String): Location
    description(locale: String): String
    directions(locale: String): String
    host(locale: String, preview: Boolean): Host
    imagesCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): AssetCollection
    linkedFrom(allowedLocales: [String]): ContentTypeLocationLinkingCollections
    postalCode(locale: String): String
    roomsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ContentTypeLocationRoomsCollection
    street(locale: String): String
    sys: Sys!
    title(locale: String): String
    unitsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ContentTypeLocationUnitsCollection
}

type ContentTypeLocationCollection {
    items: [ContentTypeLocation]!
    limit: Int!
    skip: Int!
    total: Int!
}

type ContentTypeLocationLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

type ContentTypeLocationRoomsCollection {
    items: [Room]!
    limit: Int!
    skip: Int!
    total: Int!
}

type ContentTypeLocationUnitsCollection {
    items: [Unit]!
    limit: Int!
    skip: Int!
    total: Int!
}

type ContentfulMetadata {
    tags: [ContentfulTag]!
}

"""

Represents a tag entity for finding and organizing content easily.
Find out more here: https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/content-tags
"""
type ContentfulTag {
    id: String
    name: String
}

type EntryCollection {
    items: [Entry]!
    limit: Int!
    skip: Int!
    total: Int!
}

"[See type definition](https://app.contentful.com/spaces/7jl72tq3q532/content_types/footer)"
type Footer implements Entry {
    contactInformation(locale: String, preview: Boolean): ContactInformation
    contentfulMetadata: ContentfulMetadata!
    linkedFrom(allowedLocales: [String]): FooterLinkingCollections
    navItemsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): FooterNavItemsCollection
    socialMedia(locale: String, preview: Boolean): SocialMedia
    sys: Sys!
    title(locale: String): String
}

type FooterCollection {
    items: [Footer]!
    limit: Int!
    skip: Int!
    total: Int!
}

type FooterLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
    layoutCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): LayoutCollection
}

type FooterNavItemsCollection {
    items: [NavItem]!
    limit: Int!
    skip: Int!
    total: Int!
}

"[See type definition](https://app.contentful.com/spaces/7jl72tq3q532/content_types/homePage)"
type HomePage implements Entry {
    contentfulMetadata: ContentfulMetadata!
    hero(locale: String, preview: Boolean): SectionHero
    layout(locale: String, preview: Boolean): Layout
    linkedFrom(allowedLocales: [String]): HomePageLinkingCollections
    sectionsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): HomePageSectionsCollection
    seoData(locale: String, preview: Boolean): SeoData
    sys: Sys!
    title(locale: String): String
}

type HomePageCollection {
    items: [HomePage]!
    limit: Int!
    skip: Int!
    total: Int!
}

type HomePageLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

type HomePageSectionsCollection {
    items: [Text]!
    limit: Int!
    skip: Int!
    total: Int!
}

"[See type definition](https://app.contentful.com/spaces/7jl72tq3q532/content_types/host)"
type Host implements Entry {
    contentfulMetadata: ContentfulMetadata!
    email(locale: String): String
    linkedFrom(allowedLocales: [String]): HostLinkingCollections
    name(locale: String): String
    sys: Sys!
    vorname(locale: String): String
}

type HostCollection {
    items: [Host]!
    limit: Int!
    skip: Int!
    total: Int!
}

type HostLinkingCollections {
    contentTypeLocationCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ContentTypeLocationCollection
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

"[See type definition](https://app.contentful.com/spaces/7jl72tq3q532/content_types/kitchen)"
type Kitchen implements Entry {
    amentities(locale: String): [String]
    coffeeMaker(locale: String): Boolean
    contentfulMetadata: ContentfulMetadata!
    diningArea(locale: String): Boolean
    dishescutlery(locale: String): Boolean
    dishwasher(locale: String): Boolean
    freezer(locale: String): Boolean
    fridge(locale: String): Boolean
    linkedFrom(allowedLocales: [String]): KitchenLinkingCollections
    microwave(locale: String): Boolean
    oven(locale: String): Boolean
    ricecooker(locale: String): Boolean
    stove(locale: String): String
    sys: Sys!
    title(locale: String): String
    toaster(locale: String): Boolean
    waterBoiler(locale: String): Boolean
}

type KitchenCollection {
    items: [Kitchen]!
    limit: Int!
    skip: Int!
    total: Int!
}

type KitchenLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
    roomCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): RoomCollection
}

"[See type definition](https://app.contentful.com/spaces/7jl72tq3q532/content_types/layout)"
type Layout implements Entry {
    brand(locale: String, preview: Boolean): Brand
    contentfulMetadata: ContentfulMetadata!
    footer(locale: String, preview: Boolean): Footer
    layoutName(locale: String): String
    linkedFrom(allowedLocales: [String]): LayoutLinkingCollections
    mainNavigation(locale: String, preview: Boolean): MainNavigation
    name(locale: String): String
    sys: Sys!
}

type LayoutCollection {
    items: [Layout]!
    limit: Int!
    skip: Int!
    total: Int!
}

type LayoutLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
    homePageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): HomePageCollection
}

type Location {
    lat: Float
    lon: Float
}

"[See type definition](https://app.contentful.com/spaces/7jl72tq3q532/content_types/mainNavigation)"
type MainNavigation implements Entry {
    contentfulMetadata: ContentfulMetadata!
    linkedFrom(allowedLocales: [String]): MainNavigationLinkingCollections
    navItemsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): MainNavigationNavItemsCollection
    sys: Sys!
    title(locale: String): String
}

type MainNavigationCollection {
    items: [MainNavigation]!
    limit: Int!
    skip: Int!
    total: Int!
}

type MainNavigationLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
    layoutCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): LayoutCollection
}

type MainNavigationNavItemsCollection {
    items: [NavItem]!
    limit: Int!
    skip: Int!
    total: Int!
}

"[See type definition](https://app.contentful.com/spaces/7jl72tq3q532/content_types/navItem)"
type NavItem implements Entry {
    contentfulMetadata: ContentfulMetadata!
    linkedFrom(allowedLocales: [String]): NavItemLinkingCollections
    slug(locale: String): String
    sys: Sys!
    title(locale: String): String
}

type NavItemCollection {
    items: [NavItem]!
    limit: Int!
    skip: Int!
    total: Int!
}

type NavItemLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
    footerCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): FooterCollection
    mainNavigationCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): MainNavigationCollection
}

"[See type definition](https://app.contentful.com/spaces/7jl72tq3q532/content_types/otherRoomType)"
type OtherRoomType implements Entry {
    amentities(locale: String): [String]
    contentfulMetadata: ContentfulMetadata!
    linkedFrom(allowedLocales: [String]): OtherRoomTypeLinkingCollections
    sys: Sys!
    title(locale: String): String
}

type OtherRoomTypeCollection {
    items: [OtherRoomType]!
    limit: Int!
    skip: Int!
    total: Int!
}

type OtherRoomTypeLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
    roomCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): RoomCollection
}

"[See type definition](https://app.contentful.com/spaces/7jl72tq3q532/content_types/page)"
type Page implements Entry {
    body(locale: String): PageBody
    contentfulMetadata: ContentfulMetadata!
    linkedFrom(allowedLocales: [String]): PageLinkingCollections
    seoData(locale: String, preview: Boolean): SeoData
    slug(locale: String): String
    sys: Sys!
    title(locale: String): String
}

type PageBody {
    json: JSON!
    links: PageBodyLinks!
}

type PageBodyAssets {
    block: [Asset]!
    hyperlink: [Asset]!
}

type PageBodyEntries {
    block: [Entry]!
    hyperlink: [Entry]!
    inline: [Entry]!
}

type PageBodyLinks {
    assets: PageBodyAssets!
    entries: PageBodyEntries!
}

type PageCollection {
    items: [Page]!
    limit: Int!
    skip: Int!
    total: Int!
}

type PageLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

"[See type definition](https://app.contentful.com/spaces/7jl72tq3q532/content_types/price)"
type Price implements Entry {
    contentfulMetadata: ContentfulMetadata!
    linkedFrom(allowedLocales: [String]): PriceLinkingCollections
    standardPrice(locale: String): Float
    sys: Sys!
}

type PriceCollection {
    items: [Price]!
    limit: Int!
    skip: Int!
    total: Int!
}

type PriceLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
    unitCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): UnitCollection
}

type Query {
    asset(id: String!, locale: String, preview: Boolean): Asset
    assetCollection(limit: Int = 100, locale: String, order: [AssetOrder], preview: Boolean, skip: Int = 0, where: AssetFilter): AssetCollection
    brand(id: String!, locale: String, preview: Boolean): Brand
    brandCollection(limit: Int = 100, locale: String, order: [BrandOrder], preview: Boolean, skip: Int = 0, where: BrandFilter): BrandCollection
    contactInformation(id: String!, locale: String, preview: Boolean): ContactInformation
    contactInformationCollection(limit: Int = 100, locale: String, order: [ContactInformationOrder], preview: Boolean, skip: Int = 0, where: ContactInformationFilter): ContactInformationCollection
    contentTypeLocation(id: String!, locale: String, preview: Boolean): ContentTypeLocation
    contentTypeLocationCollection(limit: Int = 100, locale: String, order: [ContentTypeLocationOrder], preview: Boolean, skip: Int = 0, where: ContentTypeLocationFilter): ContentTypeLocationCollection
    entryCollection(limit: Int = 100, locale: String, order: [EntryOrder], preview: Boolean, skip: Int = 0, where: EntryFilter): EntryCollection
    footer(id: String!, locale: String, preview: Boolean): Footer
    footerCollection(limit: Int = 100, locale: String, order: [FooterOrder], preview: Boolean, skip: Int = 0, where: FooterFilter): FooterCollection
    homePage(id: String!, locale: String, preview: Boolean): HomePage
    homePageCollection(limit: Int = 100, locale: String, order: [HomePageOrder], preview: Boolean, skip: Int = 0, where: HomePageFilter): HomePageCollection
    host(id: String!, locale: String, preview: Boolean): Host
    hostCollection(limit: Int = 100, locale: String, order: [HostOrder], preview: Boolean, skip: Int = 0, where: HostFilter): HostCollection
    kitchen(id: String!, locale: String, preview: Boolean): Kitchen
    kitchenCollection(limit: Int = 100, locale: String, order: [KitchenOrder], preview: Boolean, skip: Int = 0, where: KitchenFilter): KitchenCollection
    layout(id: String!, locale: String, preview: Boolean): Layout
    layoutCollection(limit: Int = 100, locale: String, order: [LayoutOrder], preview: Boolean, skip: Int = 0, where: LayoutFilter): LayoutCollection
    mainNavigation(id: String!, locale: String, preview: Boolean): MainNavigation
    mainNavigationCollection(limit: Int = 100, locale: String, order: [MainNavigationOrder], preview: Boolean, skip: Int = 0, where: MainNavigationFilter): MainNavigationCollection
    navItem(id: String!, locale: String, preview: Boolean): NavItem
    navItemCollection(limit: Int = 100, locale: String, order: [NavItemOrder], preview: Boolean, skip: Int = 0, where: NavItemFilter): NavItemCollection
    otherRoomType(id: String!, locale: String, preview: Boolean): OtherRoomType
    otherRoomTypeCollection(limit: Int = 100, locale: String, order: [OtherRoomTypeOrder], preview: Boolean, skip: Int = 0, where: OtherRoomTypeFilter): OtherRoomTypeCollection
    page(id: String!, locale: String, preview: Boolean): Page
    pageCollection(limit: Int = 100, locale: String, order: [PageOrder], preview: Boolean, skip: Int = 0, where: PageFilter): PageCollection
    price(id: String!, locale: String, preview: Boolean): Price
    priceCollection(limit: Int = 100, locale: String, order: [PriceOrder], preview: Boolean, skip: Int = 0, where: PriceFilter): PriceCollection
    room(id: String!, locale: String, preview: Boolean): Room
    roomCollection(limit: Int = 100, locale: String, order: [RoomOrder], preview: Boolean, skip: Int = 0, where: RoomFilter): RoomCollection
    roomTypeBathroom(id: String!, locale: String, preview: Boolean): RoomTypeBathroom
    roomTypeBathroomCollection(limit: Int = 100, locale: String, order: [RoomTypeBathroomOrder], preview: Boolean, skip: Int = 0, where: RoomTypeBathroomFilter): RoomTypeBathroomCollection
    roomTypeBedroom(id: String!, locale: String, preview: Boolean): RoomTypeBedroom
    roomTypeBedroomCollection(limit: Int = 100, locale: String, order: [RoomTypeBedroomOrder], preview: Boolean, skip: Int = 0, where: RoomTypeBedroomFilter): RoomTypeBedroomCollection
    roomTypeLivingRoom(id: String!, locale: String, preview: Boolean): RoomTypeLivingRoom
    roomTypeLivingRoomCollection(limit: Int = 100, locale: String, order: [RoomTypeLivingRoomOrder], preview: Boolean, skip: Int = 0, where: RoomTypeLivingRoomFilter): RoomTypeLivingRoomCollection
    roomTypeStoreroom(id: String!, locale: String, preview: Boolean): RoomTypeStoreroom
    roomTypeStoreroomCollection(limit: Int = 100, locale: String, order: [RoomTypeStoreroomOrder], preview: Boolean, skip: Int = 0, where: RoomTypeStoreroomFilter): RoomTypeStoreroomCollection
    sectionHero(id: String!, locale: String, preview: Boolean): SectionHero
    sectionHeroCollection(limit: Int = 100, locale: String, order: [SectionHeroOrder], preview: Boolean, skip: Int = 0, where: SectionHeroFilter): SectionHeroCollection
    seoData(id: String!, locale: String, preview: Boolean): SeoData
    seoDataCollection(limit: Int = 100, locale: String, order: [SeoDataOrder], preview: Boolean, skip: Int = 0, where: SeoDataFilter): SeoDataCollection
    socialMedia(id: String!, locale: String, preview: Boolean): SocialMedia
    socialMediaCollection(limit: Int = 100, locale: String, order: [SocialMediaOrder], preview: Boolean, skip: Int = 0, where: SocialMediaFilter): SocialMediaCollection
    text(id: String!, locale: String, preview: Boolean): Text
    textCollection(limit: Int = 100, locale: String, order: [TextOrder], preview: Boolean, skip: Int = 0, where: TextFilter): TextCollection
    unit(id: String!, locale: String, preview: Boolean): Unit
    unitCollection(limit: Int = 100, locale: String, order: [UnitOrder], preview: Boolean, skip: Int = 0, where: UnitFilter): UnitCollection
}

"[See type definition](https://app.contentful.com/spaces/7jl72tq3q532/content_types/room)"
type Room implements Entry {
    contentfulMetadata: ContentfulMetadata!
    description(locale: String): String
    imagesCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): AssetCollection
    linkedFrom(allowedLocales: [String]): RoomLinkingCollections
    roomType(locale: String, preview: Boolean): RoomRoomType
    sys: Sys!
    title(locale: String): String
}

type RoomCollection {
    items: [Room]!
    limit: Int!
    skip: Int!
    total: Int!
}

type RoomLinkingCollections {
    contentTypeLocationCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ContentTypeLocationCollection
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
    unitCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): UnitCollection
}

"[See type definition](https://app.contentful.com/spaces/7jl72tq3q532/content_types/roomTypeBathroom)"
type RoomTypeBathroom implements Entry {
    amentities(locale: String): [String]
    bath(locale: String): Boolean
    contentfulMetadata: ContentfulMetadata!
    hairdryer(locale: String): Boolean
    linkedFrom(allowedLocales: [String]): RoomTypeBathroomLinkingCollections
    shower(locale: String): Boolean
    sys: Sys!
    title(locale: String): String
}

type RoomTypeBathroomCollection {
    items: [RoomTypeBathroom]!
    limit: Int!
    skip: Int!
    total: Int!
}

type RoomTypeBathroomLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
    roomCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): RoomCollection
}

"[See type definition](https://app.contentful.com/spaces/7jl72tq3q532/content_types/roomTypeBedroom)"
type RoomTypeBedroom implements Entry {
    amentities(locale: String): [String]
    bedLinenProvided(locale: String): Boolean
    beds(locale: String): Int
    contentfulMetadata: ContentfulMetadata!
    couch(locale: String): Boolean
    doubleBed(locale: String): Boolean
    linkedFrom(allowedLocales: [String]): RoomTypeBedroomLinkingCollections
    singleBed(locale: String): Boolean
    sys: Sys!
    title(locale: String): String
    workplace(locale: String): Boolean
}

type RoomTypeBedroomCollection {
    items: [RoomTypeBedroom]!
    limit: Int!
    skip: Int!
    total: Int!
}

type RoomTypeBedroomLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
    roomCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): RoomCollection
}

"[See type definition](https://app.contentful.com/spaces/7jl72tq3q532/content_types/roomTypeLivingRoom)"
type RoomTypeLivingRoom implements Entry {
    amentities(locale: String): [String]
    armchair(locale: String): Boolean
    contentfulMetadata: ContentfulMetadata!
    couch(locale: String): Boolean
    diningTable(locale: String): Boolean
    entertainment(locale: String): Boolean
    linkedFrom(allowedLocales: [String]): RoomTypeLivingRoomLinkingCollections
    sys: Sys!
    television(locale: String): Boolean
    title(locale: String): String
    workplace(locale: String): Boolean
}

type RoomTypeLivingRoomCollection {
    items: [RoomTypeLivingRoom]!
    limit: Int!
    skip: Int!
    total: Int!
}

type RoomTypeLivingRoomLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
    roomCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): RoomCollection
}

"[See type definition](https://app.contentful.com/spaces/7jl72tq3q532/content_types/roomTypeStoreroom)"
type RoomTypeStoreroom implements Entry {
    amentities(locale: String): [String]
    contentfulMetadata: ContentfulMetadata!
    linkedFrom(allowedLocales: [String]): RoomTypeStoreroomLinkingCollections
    locker(locale: String): Boolean
    sys: Sys!
    title(locale: String): String
}

type RoomTypeStoreroomCollection {
    items: [RoomTypeStoreroom]!
    limit: Int!
    skip: Int!
    total: Int!
}

type RoomTypeStoreroomLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
    roomCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): RoomCollection
}

"[See type definition](https://app.contentful.com/spaces/7jl72tq3q532/content_types/sectionHero)"
type SectionHero implements Entry {
    contentfulMetadata: ContentfulMetadata!
    linkedFrom(allowedLocales: [String]): SectionHeroLinkingCollections
    subtitle(locale: String): String
    sys: Sys!
    title(locale: String): String
}

type SectionHeroCollection {
    items: [SectionHero]!
    limit: Int!
    skip: Int!
    total: Int!
}

type SectionHeroLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
    homePageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): HomePageCollection
}

"[See type definition](https://app.contentful.com/spaces/7jl72tq3q532/content_types/seoData)"
type SeoData implements Entry {
    contentfulMetadata: ContentfulMetadata!
    linkedFrom(allowedLocales: [String]): SeoDataLinkingCollections
    metaDescription(locale: String): String
    metaTags(locale: String): [String]
    metaTitle(locale: String): String
    ogImage(locale: String, preview: Boolean): Asset
    sys: Sys!
}

type SeoDataCollection {
    items: [SeoData]!
    limit: Int!
    skip: Int!
    total: Int!
}

type SeoDataLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
    homePageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): HomePageCollection
    pageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PageCollection
    unitCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): UnitCollection
}

"[See type definition](https://app.contentful.com/spaces/7jl72tq3q532/content_types/socialMedia)"
type SocialMedia implements Entry {
    accountName(locale: String): String
    contentfulMetadata: ContentfulMetadata!
    githubUrl(locale: String): String
    instagramUrl(locale: String): String
    linkedFrom(allowedLocales: [String]): SocialMediaLinkingCollections
    linkedinUrl(locale: String): String
    sys: Sys!
}

type SocialMediaCollection {
    items: [SocialMedia]!
    limit: Int!
    skip: Int!
    total: Int!
}

type SocialMediaLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
    footerCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): FooterCollection
}

type Sys {
    environmentId: String!
    firstPublishedAt: DateTime
    id: String!
    publishedAt: DateTime
    publishedVersion: Int
    spaceId: String!
}

"[See type definition](https://app.contentful.com/spaces/7jl72tq3q532/content_types/text)"
type Text implements Entry {
    contentfulMetadata: ContentfulMetadata!
    linkedFrom(allowedLocales: [String]): TextLinkingCollections
    media(locale: String, preview: Boolean): Asset
    subtitle(locale: String): String
    sys: Sys!
    text(locale: String): String
    title(locale: String): String
    variant(locale: String): String
}

type TextCollection {
    items: [Text]!
    limit: Int!
    skip: Int!
    total: Int!
}

type TextLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
    homePageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): HomePageCollection
}

"[See type definition](https://app.contentful.com/spaces/7jl72tq3q532/content_types/unit)"
type Unit implements Entry {
    contentfulMetadata: ContentfulMetadata!
    description(locale: String): String
    featuredImage(locale: String, preview: Boolean): Asset
    heating(locale: String): String
    ical(locale: String): String
    imagesCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): AssetCollection
    internet(locale: String): Boolean
    linkedFrom(allowedLocales: [String]): UnitLinkingCollections
    numberOfGuests(locale: String): Int
    otherInformations(locale: String): UnitOtherInformations
    overviewDescription(locale: String): String
    price(locale: String, preview: Boolean): Price
    roomsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): UnitRoomsCollection
    seoMetadata(locale: String, preview: Boolean): SeoData
    slug(locale: String): String
    sys: Sys!
    title(locale: String): String
}

type UnitCollection {
    items: [Unit]!
    limit: Int!
    skip: Int!
    total: Int!
}

type UnitLinkingCollections {
    contentTypeLocationCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ContentTypeLocationCollection
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

type UnitOtherInformations {
    json: JSON!
    links: UnitOtherInformationsLinks!
}

type UnitOtherInformationsAssets {
    block: [Asset]!
    hyperlink: [Asset]!
}

type UnitOtherInformationsEntries {
    block: [Entry]!
    hyperlink: [Entry]!
    inline: [Entry]!
}

type UnitOtherInformationsLinks {
    assets: UnitOtherInformationsAssets!
    entries: UnitOtherInformationsEntries!
}

type UnitRoomsCollection {
    items: [Room]!
    limit: Int!
    skip: Int!
    total: Int!
}

enum AssetOrder {
    contentType_ASC
    contentType_DESC
    fileName_ASC
    fileName_DESC
    height_ASC
    height_DESC
    size_ASC
    size_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
    url_ASC
    url_DESC
    width_ASC
    width_DESC
}

enum BrandOrder {
    brand_ASC
    brand_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
}

enum ContactInformationOrder {
    city_ASC
    city_DESC
    companyName_ASC
    companyName_DESC
    country_ASC
    country_DESC
    email_ASC
    email_DESC
    phoneNumber_ASC
    phoneNumber_DESC
    street_ASC
    street_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
    zipCode_ASC
    zipCode_DESC
}

enum ContentTypeLocationOrder {
    city_ASC
    city_DESC
    postalCode_ASC
    postalCode_DESC
    street_ASC
    street_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
    title_ASC
    title_DESC
}

enum EntryOrder {
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
}

enum FooterOrder {
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
    title_ASC
    title_DESC
}

enum HomePageOrder {
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
    title_ASC
    title_DESC
}

enum HostOrder {
    email_ASC
    email_DESC
    name_ASC
    name_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
    vorname_ASC
    vorname_DESC
}

enum ImageFormat {
    AVIF
    "JPG image format."
    JPG
    """

    Progressive JPG format stores multiple passes of an image in progressively higher detail.
    When a progressive image is loading, the viewer will first see a lower quality pixelated version which
    will gradually improve in detail, until the image is fully downloaded. This is to display an image as
    early as possible to make the layout look as designed.
    """
    JPG_PROGRESSIVE
    "PNG image format"
    PNG
    """

    8-bit PNG images support up to 256 colors and weigh less than the standard 24-bit PNG equivalent.
    The 8-bit PNG format is mostly used for simple images, such as icons or logos.
    """
    PNG8
    "WebP image format."
    WEBP
}

enum ImageResizeFocus {
    "Focus the resizing on the bottom."
    BOTTOM
    "Focus the resizing on the bottom left."
    BOTTOM_LEFT
    "Focus the resizing on the bottom right."
    BOTTOM_RIGHT
    "Focus the resizing on the center."
    CENTER
    "Focus the resizing on the largest face."
    FACE
    "Focus the resizing on the area containing all the faces."
    FACES
    "Focus the resizing on the left."
    LEFT
    "Focus the resizing on the right."
    RIGHT
    "Focus the resizing on the top."
    TOP
    "Focus the resizing on the top left."
    TOP_LEFT
    "Focus the resizing on the top right."
    TOP_RIGHT
}

enum ImageResizeStrategy {
    "Crops a part of the original image to fit into the specified dimensions."
    CROP
    "Resizes the image to the specified dimensions, cropping the image if needed."
    FILL
    "Resizes the image to fit into the specified dimensions."
    FIT
    """

    Resizes the image to the specified dimensions, padding the image if needed.
    Uses desired background color as padding color.
    """
    PAD
    "Resizes the image to the specified dimensions, changing the original aspect ratio if needed."
    SCALE
    "Creates a thumbnail from the image."
    THUMB
}

enum KitchenOrder {
    coffeeMaker_ASC
    coffeeMaker_DESC
    diningArea_ASC
    diningArea_DESC
    dishescutlery_ASC
    dishescutlery_DESC
    dishwasher_ASC
    dishwasher_DESC
    freezer_ASC
    freezer_DESC
    fridge_ASC
    fridge_DESC
    microwave_ASC
    microwave_DESC
    oven_ASC
    oven_DESC
    ricecooker_ASC
    ricecooker_DESC
    stove_ASC
    stove_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
    title_ASC
    title_DESC
    toaster_ASC
    toaster_DESC
    waterBoiler_ASC
    waterBoiler_DESC
}

enum LayoutOrder {
    layoutName_ASC
    layoutName_DESC
    name_ASC
    name_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
}

enum MainNavigationOrder {
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
    title_ASC
    title_DESC
}

enum NavItemOrder {
    slug_ASC
    slug_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
    title_ASC
    title_DESC
}

enum OtherRoomTypeOrder {
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
    title_ASC
    title_DESC
}

enum PageOrder {
    slug_ASC
    slug_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
    title_ASC
    title_DESC
}

enum PriceOrder {
    standardPrice_ASC
    standardPrice_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
}

enum RoomOrder {
    description_ASC
    description_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
    title_ASC
    title_DESC
}

enum RoomTypeBathroomOrder {
    bath_ASC
    bath_DESC
    hairdryer_ASC
    hairdryer_DESC
    shower_ASC
    shower_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
    title_ASC
    title_DESC
}

enum RoomTypeBedroomOrder {
    bedLinenProvided_ASC
    bedLinenProvided_DESC
    beds_ASC
    beds_DESC
    couch_ASC
    couch_DESC
    doubleBed_ASC
    doubleBed_DESC
    singleBed_ASC
    singleBed_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
    title_ASC
    title_DESC
    workplace_ASC
    workplace_DESC
}

enum RoomTypeLivingRoomOrder {
    armchair_ASC
    armchair_DESC
    couch_ASC
    couch_DESC
    diningTable_ASC
    diningTable_DESC
    entertainment_ASC
    entertainment_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
    television_ASC
    television_DESC
    title_ASC
    title_DESC
    workplace_ASC
    workplace_DESC
}

enum RoomTypeStoreroomOrder {
    locker_ASC
    locker_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
    title_ASC
    title_DESC
}

enum SectionHeroOrder {
    subtitle_ASC
    subtitle_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
    title_ASC
    title_DESC
}

enum SeoDataOrder {
    metaDescription_ASC
    metaDescription_DESC
    metaTitle_ASC
    metaTitle_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
}

enum SocialMediaOrder {
    accountName_ASC
    accountName_DESC
    githubURL_ASC
    githubURL_DESC
    instagramUrl_ASC
    instagramUrl_DESC
    linkedinUrl_ASC
    linkedinUrl_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
}

enum TextOrder {
    subtitle_ASC
    subtitle_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
    title_ASC
    title_DESC
    variant_ASC
    variant_DESC
}

enum UnitOrder {
    heating_ASC
    heating_DESC
    ical_ASC
    ical_DESC
    internet_ASC
    internet_DESC
    numberOfGuests_ASC
    numberOfGuests_DESC
    overviewDescription_ASC
    overviewDescription_DESC
    slug_ASC
    slug_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
    title_ASC
    title_DESC
}

"The Circle scalar type represents a circle, defined by the coordinates of its center and a radius. The Circle type is used to represent a searchable area together with the '_within_circle' filter."
scalar Circle

"""

A date-time string at UTC, such as 2007-12-03T10:15:30Z,
compliant with the 'date-time' format outlined in section 5.6 of
the RFC 3339 profile of the ISO 8601 standard for representation
of dates and times using the Gregorian calendar.
"""
scalar DateTime

"The 'Dimension' type represents dimensions as whole numeric values between `1` and `4000`."
scalar Dimension

"The 'HexColor' type represents color in `rgb:ffffff` string format."
scalar HexColor

"The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf)."
scalar JSON

"The 'Quality' type represents quality as whole numeric values between `1` and `100`."
scalar Quality

"The Rectangle scalar type represents a rectangle, defined by the coordinates of its top left and bottom right corners. The Rectangle type is used to represent a searchable area together with the '_within_rectangle' filter."
scalar Rectangle

input AssetFilter {
    AND: [AssetFilter]
    OR: [AssetFilter]
    contentType: String
    contentType_contains: String
    contentType_exists: Boolean
    contentType_in: [String]
    contentType_not: String
    contentType_not_contains: String
    contentType_not_in: [String]
    contentfulMetadata: ContentfulMetadataFilter
    description: String
    description_contains: String
    description_exists: Boolean
    description_in: [String]
    description_not: String
    description_not_contains: String
    description_not_in: [String]
    fileName: String
    fileName_contains: String
    fileName_exists: Boolean
    fileName_in: [String]
    fileName_not: String
    fileName_not_contains: String
    fileName_not_in: [String]
    height: Int
    height_exists: Boolean
    height_gt: Int
    height_gte: Int
    height_in: [Int]
    height_lt: Int
    height_lte: Int
    height_not: Int
    height_not_in: [Int]
    size: Int
    size_exists: Boolean
    size_gt: Int
    size_gte: Int
    size_in: [Int]
    size_lt: Int
    size_lte: Int
    size_not: Int
    size_not_in: [Int]
    sys: SysFilter
    title: String
    title_contains: String
    title_exists: Boolean
    title_in: [String]
    title_not: String
    title_not_contains: String
    title_not_in: [String]
    url: String
    url_contains: String
    url_exists: Boolean
    url_in: [String]
    url_not: String
    url_not_contains: String
    url_not_in: [String]
    width: Int
    width_exists: Boolean
    width_gt: Int
    width_gte: Int
    width_in: [Int]
    width_lt: Int
    width_lte: Int
    width_not: Int
    width_not_in: [Int]
}

input BrandFilter {
    AND: [BrandFilter]
    OR: [BrandFilter]
    brand: String
    brand_contains: String
    brand_exists: Boolean
    brand_in: [String]
    brand_not: String
    brand_not_contains: String
    brand_not_in: [String]
    contentfulMetadata: ContentfulMetadataFilter
    logo_exists: Boolean
    sys: SysFilter
}

input ContactInformationFilter {
    AND: [ContactInformationFilter]
    OR: [ContactInformationFilter]
    city: String
    city_contains: String
    city_exists: Boolean
    city_in: [String]
    city_not: String
    city_not_contains: String
    city_not_in: [String]
    companyName: String
    companyName_contains: String
    companyName_exists: Boolean
    companyName_in: [String]
    companyName_not: String
    companyName_not_contains: String
    companyName_not_in: [String]
    contentfulMetadata: ContentfulMetadataFilter
    country: String
    country_contains: String
    country_exists: Boolean
    country_in: [String]
    country_not: String
    country_not_contains: String
    country_not_in: [String]
    email: String
    email_contains: String
    email_exists: Boolean
    email_in: [String]
    email_not: String
    email_not_contains: String
    email_not_in: [String]
    phoneNumber: String
    phoneNumber_contains: String
    phoneNumber_exists: Boolean
    phoneNumber_in: [String]
    phoneNumber_not: String
    phoneNumber_not_contains: String
    phoneNumber_not_in: [String]
    street: String
    street_contains: String
    street_exists: Boolean
    street_in: [String]
    street_not: String
    street_not_contains: String
    street_not_in: [String]
    sys: SysFilter
    zipCode: String
    zipCode_contains: String
    zipCode_exists: Boolean
    zipCode_in: [String]
    zipCode_not: String
    zipCode_not_contains: String
    zipCode_not_in: [String]
}

input ContentTypeLocationFilter {
    AND: [ContentTypeLocationFilter]
    OR: [ContentTypeLocationFilter]
    city: String
    city_contains: String
    city_exists: Boolean
    city_in: [String]
    city_not: String
    city_not_contains: String
    city_not_in: [String]
    contentfulMetadata: ContentfulMetadataFilter
    coordinates_exists: Boolean
    coordinates_within_circle: Circle
    coordinates_within_rectangle: Rectangle
    description: String
    description_contains: String
    description_exists: Boolean
    description_in: [String]
    description_not: String
    description_not_contains: String
    description_not_in: [String]
    directions: String
    directions_contains: String
    directions_exists: Boolean
    directions_in: [String]
    directions_not: String
    directions_not_contains: String
    directions_not_in: [String]
    host: cfHostNestedFilter
    host_exists: Boolean
    imagesCollection_exists: Boolean
    postalCode: String
    postalCode_contains: String
    postalCode_exists: Boolean
    postalCode_in: [String]
    postalCode_not: String
    postalCode_not_contains: String
    postalCode_not_in: [String]
    roomsCollection_exists: Boolean
    street: String
    street_contains: String
    street_exists: Boolean
    street_in: [String]
    street_not: String
    street_not_contains: String
    street_not_in: [String]
    sys: SysFilter
    title: String
    title_contains: String
    title_exists: Boolean
    title_in: [String]
    title_not: String
    title_not_contains: String
    title_not_in: [String]
    unitsCollection_exists: Boolean
}

input ContentfulMetadataFilter {
    tags: ContentfulMetadataTagsFilter
    tags_exists: Boolean
}

input ContentfulMetadataTagsFilter {
    id_contains_all: [String]
    id_contains_none: [String]
    id_contains_some: [String]
}

input EntryFilter {
    AND: [EntryFilter]
    OR: [EntryFilter]
    contentfulMetadata: ContentfulMetadataFilter
    sys: SysFilter
}

input FooterFilter {
    AND: [FooterFilter]
    OR: [FooterFilter]
    contactInformation: cfContactInformationNestedFilter
    contactInformation_exists: Boolean
    contentfulMetadata: ContentfulMetadataFilter
    navItemsCollection_exists: Boolean
    socialMedia: cfSocialMediaNestedFilter
    socialMedia_exists: Boolean
    sys: SysFilter
    title: String
    title_contains: String
    title_exists: Boolean
    title_in: [String]
    title_not: String
    title_not_contains: String
    title_not_in: [String]
}

input HomePageFilter {
    AND: [HomePageFilter]
    OR: [HomePageFilter]
    contentfulMetadata: ContentfulMetadataFilter
    hero: cfSectionHeroNestedFilter
    hero_exists: Boolean
    layout: cfLayoutNestedFilter
    layout_exists: Boolean
    sectionsCollection_exists: Boolean
    seoData: cfSeoDataNestedFilter
    seoData_exists: Boolean
    sys: SysFilter
    title: String
    title_contains: String
    title_exists: Boolean
    title_in: [String]
    title_not: String
    title_not_contains: String
    title_not_in: [String]
}

input HostFilter {
    AND: [HostFilter]
    OR: [HostFilter]
    contentfulMetadata: ContentfulMetadataFilter
    email: String
    email_contains: String
    email_exists: Boolean
    email_in: [String]
    email_not: String
    email_not_contains: String
    email_not_in: [String]
    name: String
    name_contains: String
    name_exists: Boolean
    name_in: [String]
    name_not: String
    name_not_contains: String
    name_not_in: [String]
    sys: SysFilter
    vorname: String
    vorname_contains: String
    vorname_exists: Boolean
    vorname_in: [String]
    vorname_not: String
    vorname_not_contains: String
    vorname_not_in: [String]
}

input ImageTransformOptions {
    """

    Desired background color, used with corner radius or `PAD` resize strategy.
    Defaults to transparent (for `PNG`, `PNG8` and `WEBP`) or white (for `JPG` and `JPG_PROGRESSIVE`).
    """
    backgroundColor: HexColor
    """

    Desired corner radius in pixels.
    Results in an image with rounded corners (pass `-1` for a full circle/ellipse).
    Defaults to `0`. Uses desired background color as padding color,
    unless the format is `JPG` or `JPG_PROGRESSIVE` and resize strategy is `PAD`, then defaults to white.
    """
    cornerRadius: Int
    "Desired image format. Defaults to the original image format."
    format: ImageFormat
    "Desired height in pixels. Defaults to the original image height."
    height: Dimension
    """

    Desired quality of the image in percents.
    Used for `PNG8`, `JPG`, `JPG_PROGRESSIVE` and `WEBP` formats.
    """
    quality: Quality
    "Desired resize focus area. Defaults to `CENTER`."
    resizeFocus: ImageResizeFocus
    "Desired resize strategy. Defaults to `FIT`."
    resizeStrategy: ImageResizeStrategy
    "Desired width in pixels. Defaults to the original image width."
    width: Dimension
}

input KitchenFilter {
    AND: [KitchenFilter]
    OR: [KitchenFilter]
    amentities_contains_all: [String]
    amentities_contains_none: [String]
    amentities_contains_some: [String]
    amentities_exists: Boolean
    coffeeMaker: Boolean
    coffeeMaker_exists: Boolean
    coffeeMaker_not: Boolean
    contentfulMetadata: ContentfulMetadataFilter
    diningArea: Boolean
    diningArea_exists: Boolean
    diningArea_not: Boolean
    dishescutlery: Boolean
    dishescutlery_exists: Boolean
    dishescutlery_not: Boolean
    dishwasher: Boolean
    dishwasher_exists: Boolean
    dishwasher_not: Boolean
    freezer: Boolean
    freezer_exists: Boolean
    freezer_not: Boolean
    fridge: Boolean
    fridge_exists: Boolean
    fridge_not: Boolean
    microwave: Boolean
    microwave_exists: Boolean
    microwave_not: Boolean
    oven: Boolean
    oven_exists: Boolean
    oven_not: Boolean
    ricecooker: Boolean
    ricecooker_exists: Boolean
    ricecooker_not: Boolean
    stove: String
    stove_contains: String
    stove_exists: Boolean
    stove_in: [String]
    stove_not: String
    stove_not_contains: String
    stove_not_in: [String]
    sys: SysFilter
    title: String
    title_contains: String
    title_exists: Boolean
    title_in: [String]
    title_not: String
    title_not_contains: String
    title_not_in: [String]
    toaster: Boolean
    toaster_exists: Boolean
    toaster_not: Boolean
    waterBoiler: Boolean
    waterBoiler_exists: Boolean
    waterBoiler_not: Boolean
}

input LayoutFilter {
    AND: [LayoutFilter]
    OR: [LayoutFilter]
    brand: cfBrandNestedFilter
    brand_exists: Boolean
    contentfulMetadata: ContentfulMetadataFilter
    footer: cfFooterNestedFilter
    footer_exists: Boolean
    layoutName: String
    layoutName_contains: String
    layoutName_exists: Boolean
    layoutName_in: [String]
    layoutName_not: String
    layoutName_not_contains: String
    layoutName_not_in: [String]
    mainNavigation: cfMainNavigationNestedFilter
    mainNavigation_exists: Boolean
    name: String
    name_contains: String
    name_exists: Boolean
    name_in: [String]
    name_not: String
    name_not_contains: String
    name_not_in: [String]
    sys: SysFilter
}

input MainNavigationFilter {
    AND: [MainNavigationFilter]
    OR: [MainNavigationFilter]
    contentfulMetadata: ContentfulMetadataFilter
    navItemsCollection_exists: Boolean
    sys: SysFilter
    title: String
    title_contains: String
    title_exists: Boolean
    title_in: [String]
    title_not: String
    title_not_contains: String
    title_not_in: [String]
}

input NavItemFilter {
    AND: [NavItemFilter]
    OR: [NavItemFilter]
    contentfulMetadata: ContentfulMetadataFilter
    slug: String
    slug_contains: String
    slug_exists: Boolean
    slug_in: [String]
    slug_not: String
    slug_not_contains: String
    slug_not_in: [String]
    sys: SysFilter
    title: String
    title_contains: String
    title_exists: Boolean
    title_in: [String]
    title_not: String
    title_not_contains: String
    title_not_in: [String]
}

input OtherRoomTypeFilter {
    AND: [OtherRoomTypeFilter]
    OR: [OtherRoomTypeFilter]
    amentities_contains_all: [String]
    amentities_contains_none: [String]
    amentities_contains_some: [String]
    amentities_exists: Boolean
    contentfulMetadata: ContentfulMetadataFilter
    sys: SysFilter
    title: String
    title_contains: String
    title_exists: Boolean
    title_in: [String]
    title_not: String
    title_not_contains: String
    title_not_in: [String]
}

input PageFilter {
    AND: [PageFilter]
    OR: [PageFilter]
    body_contains: String
    body_exists: Boolean
    body_not_contains: String
    contentfulMetadata: ContentfulMetadataFilter
    seoData: cfSeoDataNestedFilter
    seoData_exists: Boolean
    slug: String
    slug_contains: String
    slug_exists: Boolean
    slug_in: [String]
    slug_not: String
    slug_not_contains: String
    slug_not_in: [String]
    sys: SysFilter
    title: String
    title_contains: String
    title_exists: Boolean
    title_in: [String]
    title_not: String
    title_not_contains: String
    title_not_in: [String]
}

input PriceFilter {
    AND: [PriceFilter]
    OR: [PriceFilter]
    contentfulMetadata: ContentfulMetadataFilter
    standardPrice: Float
    standardPrice_exists: Boolean
    standardPrice_gt: Float
    standardPrice_gte: Float
    standardPrice_in: [Float]
    standardPrice_lt: Float
    standardPrice_lte: Float
    standardPrice_not: Float
    standardPrice_not_in: [Float]
    sys: SysFilter
}

input RoomFilter {
    AND: [RoomFilter]
    OR: [RoomFilter]
    contentfulMetadata: ContentfulMetadataFilter
    description: String
    description_contains: String
    description_exists: Boolean
    description_in: [String]
    description_not: String
    description_not_contains: String
    description_not_in: [String]
    imagesCollection_exists: Boolean
    roomType_exists: Boolean
    sys: SysFilter
    title: String
    title_contains: String
    title_exists: Boolean
    title_in: [String]
    title_not: String
    title_not_contains: String
    title_not_in: [String]
}

input RoomTypeBathroomFilter {
    AND: [RoomTypeBathroomFilter]
    OR: [RoomTypeBathroomFilter]
    amentities_contains_all: [String]
    amentities_contains_none: [String]
    amentities_contains_some: [String]
    amentities_exists: Boolean
    bath: Boolean
    bath_exists: Boolean
    bath_not: Boolean
    contentfulMetadata: ContentfulMetadataFilter
    hairdryer: Boolean
    hairdryer_exists: Boolean
    hairdryer_not: Boolean
    shower: Boolean
    shower_exists: Boolean
    shower_not: Boolean
    sys: SysFilter
    title: String
    title_contains: String
    title_exists: Boolean
    title_in: [String]
    title_not: String
    title_not_contains: String
    title_not_in: [String]
}

input RoomTypeBedroomFilter {
    AND: [RoomTypeBedroomFilter]
    OR: [RoomTypeBedroomFilter]
    amentities_contains_all: [String]
    amentities_contains_none: [String]
    amentities_contains_some: [String]
    amentities_exists: Boolean
    bedLinenProvided: Boolean
    bedLinenProvided_exists: Boolean
    bedLinenProvided_not: Boolean
    beds: Int
    beds_exists: Boolean
    beds_gt: Int
    beds_gte: Int
    beds_in: [Int]
    beds_lt: Int
    beds_lte: Int
    beds_not: Int
    beds_not_in: [Int]
    contentfulMetadata: ContentfulMetadataFilter
    couch: Boolean
    couch_exists: Boolean
    couch_not: Boolean
    doubleBed: Boolean
    doubleBed_exists: Boolean
    doubleBed_not: Boolean
    singleBed: Boolean
    singleBed_exists: Boolean
    singleBed_not: Boolean
    sys: SysFilter
    title: String
    title_contains: String
    title_exists: Boolean
    title_in: [String]
    title_not: String
    title_not_contains: String
    title_not_in: [String]
    workplace: Boolean
    workplace_exists: Boolean
    workplace_not: Boolean
}

input RoomTypeLivingRoomFilter {
    AND: [RoomTypeLivingRoomFilter]
    OR: [RoomTypeLivingRoomFilter]
    amentities_contains_all: [String]
    amentities_contains_none: [String]
    amentities_contains_some: [String]
    amentities_exists: Boolean
    armchair: Boolean
    armchair_exists: Boolean
    armchair_not: Boolean
    contentfulMetadata: ContentfulMetadataFilter
    couch: Boolean
    couch_exists: Boolean
    couch_not: Boolean
    diningTable: Boolean
    diningTable_exists: Boolean
    diningTable_not: Boolean
    entertainment: Boolean
    entertainment_exists: Boolean
    entertainment_not: Boolean
    sys: SysFilter
    television: Boolean
    television_exists: Boolean
    television_not: Boolean
    title: String
    title_contains: String
    title_exists: Boolean
    title_in: [String]
    title_not: String
    title_not_contains: String
    title_not_in: [String]
    workplace: Boolean
    workplace_exists: Boolean
    workplace_not: Boolean
}

input RoomTypeStoreroomFilter {
    AND: [RoomTypeStoreroomFilter]
    OR: [RoomTypeStoreroomFilter]
    amentities_contains_all: [String]
    amentities_contains_none: [String]
    amentities_contains_some: [String]
    amentities_exists: Boolean
    contentfulMetadata: ContentfulMetadataFilter
    locker: Boolean
    locker_exists: Boolean
    locker_not: Boolean
    sys: SysFilter
    title: String
    title_contains: String
    title_exists: Boolean
    title_in: [String]
    title_not: String
    title_not_contains: String
    title_not_in: [String]
}

input SectionHeroFilter {
    AND: [SectionHeroFilter]
    OR: [SectionHeroFilter]
    contentfulMetadata: ContentfulMetadataFilter
    subtitle: String
    subtitle_contains: String
    subtitle_exists: Boolean
    subtitle_in: [String]
    subtitle_not: String
    subtitle_not_contains: String
    subtitle_not_in: [String]
    sys: SysFilter
    title: String
    title_contains: String
    title_exists: Boolean
    title_in: [String]
    title_not: String
    title_not_contains: String
    title_not_in: [String]
}

input SeoDataFilter {
    AND: [SeoDataFilter]
    OR: [SeoDataFilter]
    contentfulMetadata: ContentfulMetadataFilter
    metaDescription: String
    metaDescription_contains: String
    metaDescription_exists: Boolean
    metaDescription_in: [String]
    metaDescription_not: String
    metaDescription_not_contains: String
    metaDescription_not_in: [String]
    metaTags_contains_all: [String]
    metaTags_contains_none: [String]
    metaTags_contains_some: [String]
    metaTags_exists: Boolean
    metaTitle: String
    metaTitle_contains: String
    metaTitle_exists: Boolean
    metaTitle_in: [String]
    metaTitle_not: String
    metaTitle_not_contains: String
    metaTitle_not_in: [String]
    ogImage_exists: Boolean
    sys: SysFilter
}

input SocialMediaFilter {
    AND: [SocialMediaFilter]
    OR: [SocialMediaFilter]
    accountName: String
    accountName_contains: String
    accountName_exists: Boolean
    accountName_in: [String]
    accountName_not: String
    accountName_not_contains: String
    accountName_not_in: [String]
    contentfulMetadata: ContentfulMetadataFilter
    githubURL: String
    githubURL_contains: String
    githubURL_exists: Boolean
    githubURL_in: [String]
    githubURL_not: String
    githubURL_not_contains: String
    githubURL_not_in: [String]
    instagramUrl: String
    instagramUrl_contains: String
    instagramUrl_exists: Boolean
    instagramUrl_in: [String]
    instagramUrl_not: String
    instagramUrl_not_contains: String
    instagramUrl_not_in: [String]
    linkedinUrl: String
    linkedinUrl_contains: String
    linkedinUrl_exists: Boolean
    linkedinUrl_in: [String]
    linkedinUrl_not: String
    linkedinUrl_not_contains: String
    linkedinUrl_not_in: [String]
    sys: SysFilter
}

input SysFilter {
    firstPublishedAt: DateTime
    firstPublishedAt_exists: Boolean
    firstPublishedAt_gt: DateTime
    firstPublishedAt_gte: DateTime
    firstPublishedAt_in: [DateTime]
    firstPublishedAt_lt: DateTime
    firstPublishedAt_lte: DateTime
    firstPublishedAt_not: DateTime
    firstPublishedAt_not_in: [DateTime]
    id: String
    id_contains: String
    id_exists: Boolean
    id_in: [String]
    id_not: String
    id_not_contains: String
    id_not_in: [String]
    publishedAt: DateTime
    publishedAt_exists: Boolean
    publishedAt_gt: DateTime
    publishedAt_gte: DateTime
    publishedAt_in: [DateTime]
    publishedAt_lt: DateTime
    publishedAt_lte: DateTime
    publishedAt_not: DateTime
    publishedAt_not_in: [DateTime]
    publishedVersion: Float
    publishedVersion_exists: Boolean
    publishedVersion_gt: Float
    publishedVersion_gte: Float
    publishedVersion_in: [Float]
    publishedVersion_lt: Float
    publishedVersion_lte: Float
    publishedVersion_not: Float
    publishedVersion_not_in: [Float]
}

input TextFilter {
    AND: [TextFilter]
    OR: [TextFilter]
    contentfulMetadata: ContentfulMetadataFilter
    media_exists: Boolean
    subtitle: String
    subtitle_contains: String
    subtitle_exists: Boolean
    subtitle_in: [String]
    subtitle_not: String
    subtitle_not_contains: String
    subtitle_not_in: [String]
    sys: SysFilter
    text: String
    text_contains: String
    text_exists: Boolean
    text_in: [String]
    text_not: String
    text_not_contains: String
    text_not_in: [String]
    title: String
    title_contains: String
    title_exists: Boolean
    title_in: [String]
    title_not: String
    title_not_contains: String
    title_not_in: [String]
    variant: String
    variant_contains: String
    variant_exists: Boolean
    variant_in: [String]
    variant_not: String
    variant_not_contains: String
    variant_not_in: [String]
}

input UnitFilter {
    AND: [UnitFilter]
    OR: [UnitFilter]
    contentfulMetadata: ContentfulMetadataFilter
    description: String
    description_contains: String
    description_exists: Boolean
    description_in: [String]
    description_not: String
    description_not_contains: String
    description_not_in: [String]
    featuredImage_exists: Boolean
    heating: String
    heating_contains: String
    heating_exists: Boolean
    heating_in: [String]
    heating_not: String
    heating_not_contains: String
    heating_not_in: [String]
    ical: String
    ical_contains: String
    ical_exists: Boolean
    ical_in: [String]
    ical_not: String
    ical_not_contains: String
    ical_not_in: [String]
    imagesCollection_exists: Boolean
    internet: Boolean
    internet_exists: Boolean
    internet_not: Boolean
    numberOfGuests: Int
    numberOfGuests_exists: Boolean
    numberOfGuests_gt: Int
    numberOfGuests_gte: Int
    numberOfGuests_in: [Int]
    numberOfGuests_lt: Int
    numberOfGuests_lte: Int
    numberOfGuests_not: Int
    numberOfGuests_not_in: [Int]
    otherInformations_contains: String
    otherInformations_exists: Boolean
    otherInformations_not_contains: String
    overviewDescription: String
    overviewDescription_contains: String
    overviewDescription_exists: Boolean
    overviewDescription_in: [String]
    overviewDescription_not: String
    overviewDescription_not_contains: String
    overviewDescription_not_in: [String]
    price: cfPriceNestedFilter
    price_exists: Boolean
    roomsCollection_exists: Boolean
    seoMetadata: cfSeoDataNestedFilter
    seoMetadata_exists: Boolean
    slug: String
    slug_contains: String
    slug_exists: Boolean
    slug_in: [String]
    slug_not: String
    slug_not_contains: String
    slug_not_in: [String]
    sys: SysFilter
    title: String
    title_contains: String
    title_exists: Boolean
    title_in: [String]
    title_not: String
    title_not_contains: String
    title_not_in: [String]
}

input cfBrandNestedFilter {
    AND: [cfBrandNestedFilter]
    OR: [cfBrandNestedFilter]
    brand: String
    brand_contains: String
    brand_exists: Boolean
    brand_in: [String]
    brand_not: String
    brand_not_contains: String
    brand_not_in: [String]
    contentfulMetadata: ContentfulMetadataFilter
    logo_exists: Boolean
    sys: SysFilter
}

input cfContactInformationNestedFilter {
    AND: [cfContactInformationNestedFilter]
    OR: [cfContactInformationNestedFilter]
    city: String
    city_contains: String
    city_exists: Boolean
    city_in: [String]
    city_not: String
    city_not_contains: String
    city_not_in: [String]
    companyName: String
    companyName_contains: String
    companyName_exists: Boolean
    companyName_in: [String]
    companyName_not: String
    companyName_not_contains: String
    companyName_not_in: [String]
    contentfulMetadata: ContentfulMetadataFilter
    country: String
    country_contains: String
    country_exists: Boolean
    country_in: [String]
    country_not: String
    country_not_contains: String
    country_not_in: [String]
    email: String
    email_contains: String
    email_exists: Boolean
    email_in: [String]
    email_not: String
    email_not_contains: String
    email_not_in: [String]
    phoneNumber: String
    phoneNumber_contains: String
    phoneNumber_exists: Boolean
    phoneNumber_in: [String]
    phoneNumber_not: String
    phoneNumber_not_contains: String
    phoneNumber_not_in: [String]
    street: String
    street_contains: String
    street_exists: Boolean
    street_in: [String]
    street_not: String
    street_not_contains: String
    street_not_in: [String]
    sys: SysFilter
    zipCode: String
    zipCode_contains: String
    zipCode_exists: Boolean
    zipCode_in: [String]
    zipCode_not: String
    zipCode_not_contains: String
    zipCode_not_in: [String]
}

input cfFooterNestedFilter {
    AND: [cfFooterNestedFilter]
    OR: [cfFooterNestedFilter]
    contactInformation_exists: Boolean
    contentfulMetadata: ContentfulMetadataFilter
    navItemsCollection_exists: Boolean
    socialMedia_exists: Boolean
    sys: SysFilter
    title: String
    title_contains: String
    title_exists: Boolean
    title_in: [String]
    title_not: String
    title_not_contains: String
    title_not_in: [String]
}

input cfHostNestedFilter {
    AND: [cfHostNestedFilter]
    OR: [cfHostNestedFilter]
    contentfulMetadata: ContentfulMetadataFilter
    email: String
    email_contains: String
    email_exists: Boolean
    email_in: [String]
    email_not: String
    email_not_contains: String
    email_not_in: [String]
    name: String
    name_contains: String
    name_exists: Boolean
    name_in: [String]
    name_not: String
    name_not_contains: String
    name_not_in: [String]
    sys: SysFilter
    vorname: String
    vorname_contains: String
    vorname_exists: Boolean
    vorname_in: [String]
    vorname_not: String
    vorname_not_contains: String
    vorname_not_in: [String]
}

input cfLayoutNestedFilter {
    AND: [cfLayoutNestedFilter]
    OR: [cfLayoutNestedFilter]
    brand_exists: Boolean
    contentfulMetadata: ContentfulMetadataFilter
    footer_exists: Boolean
    layoutName: String
    layoutName_contains: String
    layoutName_exists: Boolean
    layoutName_in: [String]
    layoutName_not: String
    layoutName_not_contains: String
    layoutName_not_in: [String]
    mainNavigation_exists: Boolean
    name: String
    name_contains: String
    name_exists: Boolean
    name_in: [String]
    name_not: String
    name_not_contains: String
    name_not_in: [String]
    sys: SysFilter
}

input cfMainNavigationNestedFilter {
    AND: [cfMainNavigationNestedFilter]
    OR: [cfMainNavigationNestedFilter]
    contentfulMetadata: ContentfulMetadataFilter
    navItemsCollection_exists: Boolean
    sys: SysFilter
    title: String
    title_contains: String
    title_exists: Boolean
    title_in: [String]
    title_not: String
    title_not_contains: String
    title_not_in: [String]
}

input cfPriceNestedFilter {
    AND: [cfPriceNestedFilter]
    OR: [cfPriceNestedFilter]
    contentfulMetadata: ContentfulMetadataFilter
    standardPrice: Float
    standardPrice_exists: Boolean
    standardPrice_gt: Float
    standardPrice_gte: Float
    standardPrice_in: [Float]
    standardPrice_lt: Float
    standardPrice_lte: Float
    standardPrice_not: Float
    standardPrice_not_in: [Float]
    sys: SysFilter
}

input cfSectionHeroNestedFilter {
    AND: [cfSectionHeroNestedFilter]
    OR: [cfSectionHeroNestedFilter]
    contentfulMetadata: ContentfulMetadataFilter
    subtitle: String
    subtitle_contains: String
    subtitle_exists: Boolean
    subtitle_in: [String]
    subtitle_not: String
    subtitle_not_contains: String
    subtitle_not_in: [String]
    sys: SysFilter
    title: String
    title_contains: String
    title_exists: Boolean
    title_in: [String]
    title_not: String
    title_not_contains: String
    title_not_in: [String]
}

input cfSeoDataNestedFilter {
    AND: [cfSeoDataNestedFilter]
    OR: [cfSeoDataNestedFilter]
    contentfulMetadata: ContentfulMetadataFilter
    metaDescription: String
    metaDescription_contains: String
    metaDescription_exists: Boolean
    metaDescription_in: [String]
    metaDescription_not: String
    metaDescription_not_contains: String
    metaDescription_not_in: [String]
    metaTags_contains_all: [String]
    metaTags_contains_none: [String]
    metaTags_contains_some: [String]
    metaTags_exists: Boolean
    metaTitle: String
    metaTitle_contains: String
    metaTitle_exists: Boolean
    metaTitle_in: [String]
    metaTitle_not: String
    metaTitle_not_contains: String
    metaTitle_not_in: [String]
    ogImage_exists: Boolean
    sys: SysFilter
}

input cfSocialMediaNestedFilter {
    AND: [cfSocialMediaNestedFilter]
    OR: [cfSocialMediaNestedFilter]
    accountName: String
    accountName_contains: String
    accountName_exists: Boolean
    accountName_in: [String]
    accountName_not: String
    accountName_not_contains: String
    accountName_not_in: [String]
    contentfulMetadata: ContentfulMetadataFilter
    githubURL: String
    githubURL_contains: String
    githubURL_exists: Boolean
    githubURL_in: [String]
    githubURL_not: String
    githubURL_not_contains: String
    githubURL_not_in: [String]
    instagramUrl: String
    instagramUrl_contains: String
    instagramUrl_exists: Boolean
    instagramUrl_in: [String]
    instagramUrl_not: String
    instagramUrl_not_contains: String
    instagramUrl_not_in: [String]
    linkedinUrl: String
    linkedinUrl_contains: String
    linkedinUrl_exists: Boolean
    linkedinUrl_in: [String]
    linkedinUrl_not: String
    linkedinUrl_not_contains: String
    linkedinUrl_not_in: [String]
    sys: SysFilter
}

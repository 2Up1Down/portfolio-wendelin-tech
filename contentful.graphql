# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
}

interface Entry {
    contentfulMetadata: ContentfulMetadata!
    sys: Sys!
}

"[See type definition](https://app.contentful.com/spaces/768h60wjczrv/content_types/aboutMeSection)"
type AboutMeSection implements Entry {
    contentfulMetadata: ContentfulMetadata!
    description(locale: String): AboutMeSectionDescription
    image(locale: String, preview: Boolean): Asset
    linkedFrom(allowedLocales: [String]): AboutMeSectionLinkingCollections
    sectionDescription(locale: String): String
    socialMedia(locale: String, preview: Boolean): SocialMedia
    sys: Sys!
    title(locale: String): AboutMeSectionTitle
}

type AboutMeSectionCollection {
    items: [AboutMeSection]!
    limit: Int!
    skip: Int!
    total: Int!
}

type AboutMeSectionDescription {
    json: JSON!
    links: AboutMeSectionDescriptionLinks!
}

type AboutMeSectionDescriptionAssets {
    block: [Asset]!
    hyperlink: [Asset]!
}

type AboutMeSectionDescriptionEntries {
    block: [Entry]!
    hyperlink: [Entry]!
    inline: [Entry]!
}

type AboutMeSectionDescriptionLinks {
    assets: AboutMeSectionDescriptionAssets!
    entries: AboutMeSectionDescriptionEntries!
}

type AboutMeSectionLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
    homepageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): HomepageCollection
}

type AboutMeSectionTitle {
    json: JSON!
    links: AboutMeSectionTitleLinks!
}

type AboutMeSectionTitleAssets {
    block: [Asset]!
    hyperlink: [Asset]!
}

type AboutMeSectionTitleEntries {
    block: [Entry]!
    hyperlink: [Entry]!
    inline: [Entry]!
}

type AboutMeSectionTitleLinks {
    assets: AboutMeSectionTitleAssets!
    entries: AboutMeSectionTitleEntries!
}

"Represents a binary file in a space. An asset can be any file type."
type Asset {
    contentType(locale: String): String
    contentfulMetadata: ContentfulMetadata!
    description(locale: String): String
    fileName(locale: String): String
    height(locale: String): Int
    linkedFrom(allowedLocales: [String]): AssetLinkingCollections
    size(locale: String): Int
    sys: Sys!
    title(locale: String): String
    url(locale: String, transform: ImageTransformOptions): String
    width(locale: String): Int
}

type AssetCollection {
    items: [Asset]!
    limit: Int!
    skip: Int!
    total: Int!
}

type AssetLinkingCollections {
    aboutMeSectionCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): AboutMeSectionCollection
    contentCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ContentCollection
    ctaCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): CtaCollection
    customerCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): CustomerCollection
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
    headerCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): HeaderCollection
    heroSectionCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): HeroSectionCollection
    pageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PageCollection
    partnerCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PartnerCollection
    projectCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ProjectCollection
    seoDataCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): SeoDataCollection
    serviceCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ServiceCollection
    testimonialCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): TestimonialCollection
}

"[See type definition](https://app.contentful.com/spaces/768h60wjczrv/content_types/contactPage)"
type ContactPage implements Entry {
    contentfulMetadata: ContentfulMetadata!
    linkedFrom(allowedLocales: [String]): ContactPageLinkingCollections
    sys: Sys!
    title(locale: String): String
}

type ContactPageCollection {
    items: [ContactPage]!
    limit: Int!
    skip: Int!
    total: Int!
}

type ContactPageLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

"[See type definition](https://app.contentful.com/spaces/768h60wjczrv/content_types/contactSection)"
type ContactSection implements Entry {
    contentfulMetadata: ContentfulMetadata!
    formId(locale: String): String
    linkedFrom(allowedLocales: [String]): ContactSectionLinkingCollections
    name(locale: String): String
    subtitle(locale: String): String
    sys: Sys!
    title(locale: String): ContactSectionTitle
}

type ContactSectionCollection {
    items: [ContactSection]!
    limit: Int!
    skip: Int!
    total: Int!
}

type ContactSectionLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
    homepageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): HomepageCollection
}

type ContactSectionTitle {
    json: JSON!
    links: ContactSectionTitleLinks!
}

type ContactSectionTitleAssets {
    block: [Asset]!
    hyperlink: [Asset]!
}

type ContactSectionTitleEntries {
    block: [Entry]!
    hyperlink: [Entry]!
    inline: [Entry]!
}

type ContactSectionTitleLinks {
    assets: ContactSectionTitleAssets!
    entries: ContactSectionTitleEntries!
}

"[See type definition](https://app.contentful.com/spaces/768h60wjczrv/content_types/content)"
type Content implements Entry {
    contentfulMetadata: ContentfulMetadata!
    contentfulName(locale: String): String
    description(locale: String): ContentDescription
    image(locale: String, preview: Boolean): Asset
    linkedFrom(allowedLocales: [String]): ContentLinkingCollections
    primaryText(locale: String): String
    secondaryText(locale: String): String
    sys: Sys!
}

type ContentCollection {
    items: [Content]!
    limit: Int!
    skip: Int!
    total: Int!
}

type ContentDescription {
    json: JSON!
    links: ContentDescriptionLinks!
}

type ContentDescriptionAssets {
    block: [Asset]!
    hyperlink: [Asset]!
}

type ContentDescriptionEntries {
    block: [Entry]!
    hyperlink: [Entry]!
    inline: [Entry]!
}

type ContentDescriptionLinks {
    assets: ContentDescriptionAssets!
    entries: ContentDescriptionEntries!
}

type ContentLinkingCollections {
    contentSectionCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ContentSectionCollection
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

"[See type definition](https://app.contentful.com/spaces/768h60wjczrv/content_types/contentSection)"
type ContentSection implements Entry {
    contentCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ContentSectionContentCollection
    contentfulMetadata: ContentfulMetadata!
    layout(locale: String): String
    linkedFrom(allowedLocales: [String]): ContentSectionLinkingCollections
    name(locale: String): String
    sectionTitle(locale: String): String
    sys: Sys!
}

type ContentSectionCollection {
    items: [ContentSection]!
    limit: Int!
    skip: Int!
    total: Int!
}

type ContentSectionContentCollection {
    items: [Content]!
    limit: Int!
    skip: Int!
    total: Int!
}

type ContentSectionLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
    pageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PageCollection
}

type ContentfulMetadata {
    tags: [ContentfulTag]!
}

"""

Represents a tag entity for finding and organizing content easily.
Find out more here: https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/content-tags
"""
type ContentfulTag {
    id: String
    name: String
}

"[See type definition](https://app.contentful.com/spaces/768h60wjczrv/content_types/cta)"
type Cta implements Entry {
    buttonText(locale: String): String
    buttonUrl(locale: String): String
    contentfulMetadata: ContentfulMetadata!
    description(locale: String): String
    image(locale: String, preview: Boolean): Asset
    linkedFrom(allowedLocales: [String]): CtaLinkingCollections
    sys: Sys!
    title(locale: String): CtaTitle
}

type CtaCollection {
    items: [Cta]!
    limit: Int!
    skip: Int!
    total: Int!
}

type CtaLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
    homepageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): HomepageCollection
}

type CtaTitle {
    json: JSON!
    links: CtaTitleLinks!
}

type CtaTitleAssets {
    block: [Asset]!
    hyperlink: [Asset]!
}

type CtaTitleEntries {
    block: [Entry]!
    hyperlink: [Entry]!
    inline: [Entry]!
}

type CtaTitleLinks {
    assets: CtaTitleAssets!
    entries: CtaTitleEntries!
}

"[See type definition](https://app.contentful.com/spaces/768h60wjczrv/content_types/customer)"
type Customer implements Entry {
    contentfulMetadata: ContentfulMetadata!
    customer(locale: String): String
    linkedFrom(allowedLocales: [String]): CustomerLinkingCollections
    logo(locale: String, preview: Boolean): Asset
    sys: Sys!
    url(locale: String): String
}

type CustomerCollection {
    items: [Customer]!
    limit: Int!
    skip: Int!
    total: Int!
}

type CustomerLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
    projectCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ProjectCollection
}

type EntryCollection {
    items: [Entry]!
    limit: Int!
    skip: Int!
    total: Int!
}

"[See type definition](https://app.contentful.com/spaces/768h60wjczrv/content_types/footer)"
type Footer implements Entry {
    companyAddress(locale: String): String
    companyName(locale: String): String
    companyPlace(locale: String): String
    contentfulMetadata: ContentfulMetadata!
    copyright(locale: String): String
    email(locale: String): String
    footerVariant(locale: String): String
    linkedFrom(allowedLocales: [String]): FooterLinkingCollections
    linksCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): FooterLinksCollection
    socialMedia(locale: String, preview: Boolean): SocialMedia
    sys: Sys!
}

type FooterCollection {
    items: [Footer]!
    limit: Int!
    skip: Int!
    total: Int!
}

type FooterLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
    homepageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): HomepageCollection
}

type FooterLinksCollection {
    items: [Link]!
    limit: Int!
    skip: Int!
    total: Int!
}

"[See type definition](https://app.contentful.com/spaces/768h60wjczrv/content_types/header)"
type Header implements Entry {
    contentfulMetadata: ContentfulMetadata!
    headerVariant(locale: String): String
    linkedFrom(allowedLocales: [String]): HeaderLinkingCollections
    linksCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): HeaderLinksCollection
    logo(locale: String, preview: Boolean): Asset
    sys: Sys!
}

type HeaderCollection {
    items: [Header]!
    limit: Int!
    skip: Int!
    total: Int!
}

type HeaderLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
    homepageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): HomepageCollection
}

type HeaderLinksCollection {
    items: [Link]!
    limit: Int!
    skip: Int!
    total: Int!
}

"[See type definition](https://app.contentful.com/spaces/768h60wjczrv/content_types/heroSection)"
type HeroSection implements Entry {
    backgroundImage(locale: String, preview: Boolean): Asset
    contentfulMetadata: ContentfulMetadata!
    linkedFrom(allowedLocales: [String]): HeroSectionLinkingCollections
    primaryButtonText(locale: String): String
    primaryButtonUrl(locale: String): String
    secondaryButtonText(locale: String): String
    secondaryButtonUrl(locale: String): String
    subtitle(locale: String): String
    sys: Sys!
    title(locale: String): HeroSectionTitle
}

type HeroSectionCollection {
    items: [HeroSection]!
    limit: Int!
    skip: Int!
    total: Int!
}

type HeroSectionLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
    homepageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): HomepageCollection
}

type HeroSectionTitle {
    json: JSON!
    links: HeroSectionTitleLinks!
}

type HeroSectionTitleAssets {
    block: [Asset]!
    hyperlink: [Asset]!
}

type HeroSectionTitleEntries {
    block: [Entry]!
    hyperlink: [Entry]!
    inline: [Entry]!
}

type HeroSectionTitleLinks {
    assets: HeroSectionTitleAssets!
    entries: HeroSectionTitleEntries!
}

"[See type definition](https://app.contentful.com/spaces/768h60wjczrv/content_types/homepage)"
type Homepage implements Entry {
    aboutMe(locale: String, preview: Boolean): AboutMeSection
    contactSection(locale: String, preview: Boolean): ContactSection
    contentfulMetadata: ContentfulMetadata!
    cta(locale: String, preview: Boolean): Cta
    footer(locale: String, preview: Boolean): Footer
    header(locale: String, preview: Boolean): Header
    heroSection(locale: String, preview: Boolean): HeroSection
    linkedFrom(allowedLocales: [String]): HomepageLinkingCollections
    pageTitle(locale: String): String
    partnersSection(locale: String, preview: Boolean): PartnersSection
    portfolioSection(locale: String, preview: Boolean): PortfolioSection
    seoData(locale: String, preview: Boolean): SeoData
    servicesSection(locale: String, preview: Boolean): ServicesSection
    sys: Sys!
    testimonialSection(locale: String, preview: Boolean): TestimonialSection
    whatIDo(locale: String, preview: Boolean): WhatSection
}

type HomepageCollection {
    items: [Homepage]!
    limit: Int!
    skip: Int!
    total: Int!
}

type HomepageLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

"[See type definition](https://app.contentful.com/spaces/768h60wjczrv/content_types/link)"
type Link implements Entry {
    contentfulMetadata: ContentfulMetadata!
    linkedFrom(allowedLocales: [String]): LinkLinkingCollections
    sys: Sys!
    text(locale: String): String
    url(locale: String): String
}

type LinkCollection {
    items: [Link]!
    limit: Int!
    skip: Int!
    total: Int!
}

type LinkLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
    footerCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): FooterCollection
    headerCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): HeaderCollection
}

"[See type definition](https://app.contentful.com/spaces/768h60wjczrv/content_types/page)"
type Page implements Entry {
    contentSectionsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PageContentSectionsCollection
    contentfulMetadata: ContentfulMetadata!
    linkedFrom(allowedLocales: [String]): PageLinkingCollections
    metaDescription(locale: String): String
    metaTitle(locale: String): String
    pageName(locale: String): String
    seoIndex(locale: String): Boolean
    socialMediaImage(locale: String, preview: Boolean): Asset
    sys: Sys!
    urlSlug(locale: String): String
}

type PageCollection {
    items: [Page]!
    limit: Int!
    skip: Int!
    total: Int!
}

type PageContentSectionsCollection {
    items: [ContentSection]!
    limit: Int!
    skip: Int!
    total: Int!
}

type PageLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

"[See type definition](https://app.contentful.com/spaces/768h60wjczrv/content_types/partner)"
type Partner implements Entry {
    company(locale: String): String
    contentfulMetadata: ContentfulMetadata!
    description(locale: String): String
    linkedFrom(allowedLocales: [String]): PartnerLinkingCollections
    logo(locale: String, preview: Boolean): Asset
    sys: Sys!
    url(locale: String): String
}

type PartnerCollection {
    items: [Partner]!
    limit: Int!
    skip: Int!
    total: Int!
}

type PartnerLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
    partnersSectionCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PartnersSectionCollection
}

"[See type definition](https://app.contentful.com/spaces/768h60wjczrv/content_types/partnersSection)"
type PartnersSection implements Entry {
    contentfulMetadata: ContentfulMetadata!
    linkedFrom(allowedLocales: [String]): PartnersSectionLinkingCollections
    partnersCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PartnersSectionPartnersCollection
    sectionName(locale: String): String
    subtitle(locale: String): String
    sys: Sys!
    title(locale: String): PartnersSectionTitle
}

type PartnersSectionCollection {
    items: [PartnersSection]!
    limit: Int!
    skip: Int!
    total: Int!
}

type PartnersSectionLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
    homepageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): HomepageCollection
}

type PartnersSectionPartnersCollection {
    items: [Partner]!
    limit: Int!
    skip: Int!
    total: Int!
}

type PartnersSectionTitle {
    json: JSON!
    links: PartnersSectionTitleLinks!
}

type PartnersSectionTitleAssets {
    block: [Asset]!
    hyperlink: [Asset]!
}

type PartnersSectionTitleEntries {
    block: [Entry]!
    hyperlink: [Entry]!
    inline: [Entry]!
}

type PartnersSectionTitleLinks {
    assets: PartnersSectionTitleAssets!
    entries: PartnersSectionTitleEntries!
}

"[See type definition](https://app.contentful.com/spaces/768h60wjczrv/content_types/portfolioSection)"
type PortfolioSection implements Entry {
    contentfulMetadata: ContentfulMetadata!
    labelServices(locale: String): String
    labelTechnologies(locale: String): String
    linkedFrom(allowedLocales: [String]): PortfolioSectionLinkingCollections
    projectsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PortfolioSectionProjectsCollection
    sectionDescription(locale: String): String
    sys: Sys!
    title(locale: String): PortfolioSectionTitle
}

type PortfolioSectionCollection {
    items: [PortfolioSection]!
    limit: Int!
    skip: Int!
    total: Int!
}

type PortfolioSectionLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
    homepageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): HomepageCollection
}

type PortfolioSectionProjectsCollection {
    items: [Project]!
    limit: Int!
    skip: Int!
    total: Int!
}

type PortfolioSectionTitle {
    json: JSON!
    links: PortfolioSectionTitleLinks!
}

type PortfolioSectionTitleAssets {
    block: [Asset]!
    hyperlink: [Asset]!
}

type PortfolioSectionTitleEntries {
    block: [Entry]!
    hyperlink: [Entry]!
    inline: [Entry]!
}

type PortfolioSectionTitleLinks {
    assets: PortfolioSectionTitleAssets!
    entries: PortfolioSectionTitleEntries!
}

"[See type definition](https://app.contentful.com/spaces/768h60wjczrv/content_types/project)"
type Project implements Entry {
    content(locale: String): ProjectContent
    contentfulMetadata: ContentfulMetadata!
    customer(locale: String, preview: Boolean): Customer
    date(locale: String): DateTime
    excerpt(locale: String): String
    image(locale: String, preview: Boolean): Asset
    linkedFrom(allowedLocales: [String]): ProjectLinkingCollections
    services(locale: String): [String]
    slug(locale: String): String
    sys: Sys!
    technologies(locale: String): [String]
    testimonialsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ProjectTestimonialsCollection
    title(locale: String): String
}

type ProjectCollection {
    items: [Project]!
    limit: Int!
    skip: Int!
    total: Int!
}

type ProjectContent {
    json: JSON!
    links: ProjectContentLinks!
}

type ProjectContentAssets {
    block: [Asset]!
    hyperlink: [Asset]!
}

type ProjectContentEntries {
    block: [Entry]!
    hyperlink: [Entry]!
    inline: [Entry]!
}

type ProjectContentLinks {
    assets: ProjectContentAssets!
    entries: ProjectContentEntries!
}

type ProjectLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
    portfolioSectionCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PortfolioSectionCollection
}

type ProjectTestimonialsCollection {
    items: [Testimonial]!
    limit: Int!
    skip: Int!
    total: Int!
}

type Query {
    aboutMeSection(id: String!, locale: String, preview: Boolean): AboutMeSection
    aboutMeSectionCollection(limit: Int = 100, locale: String, order: [AboutMeSectionOrder], preview: Boolean, skip: Int = 0, where: AboutMeSectionFilter): AboutMeSectionCollection
    asset(id: String!, locale: String, preview: Boolean): Asset
    assetCollection(limit: Int = 100, locale: String, order: [AssetOrder], preview: Boolean, skip: Int = 0, where: AssetFilter): AssetCollection
    contactPage(id: String!, locale: String, preview: Boolean): ContactPage
    contactPageCollection(limit: Int = 100, locale: String, order: [ContactPageOrder], preview: Boolean, skip: Int = 0, where: ContactPageFilter): ContactPageCollection
    contactSection(id: String!, locale: String, preview: Boolean): ContactSection
    contactSectionCollection(limit: Int = 100, locale: String, order: [ContactSectionOrder], preview: Boolean, skip: Int = 0, where: ContactSectionFilter): ContactSectionCollection
    content(id: String!, locale: String, preview: Boolean): Content
    contentCollection(limit: Int = 100, locale: String, order: [ContentOrder], preview: Boolean, skip: Int = 0, where: ContentFilter): ContentCollection
    contentSection(id: String!, locale: String, preview: Boolean): ContentSection
    contentSectionCollection(limit: Int = 100, locale: String, order: [ContentSectionOrder], preview: Boolean, skip: Int = 0, where: ContentSectionFilter): ContentSectionCollection
    cta(id: String!, locale: String, preview: Boolean): Cta
    ctaCollection(limit: Int = 100, locale: String, order: [CtaOrder], preview: Boolean, skip: Int = 0, where: CtaFilter): CtaCollection
    customer(id: String!, locale: String, preview: Boolean): Customer
    customerCollection(limit: Int = 100, locale: String, order: [CustomerOrder], preview: Boolean, skip: Int = 0, where: CustomerFilter): CustomerCollection
    entryCollection(limit: Int = 100, locale: String, order: [EntryOrder], preview: Boolean, skip: Int = 0, where: EntryFilter): EntryCollection
    footer(id: String!, locale: String, preview: Boolean): Footer
    footerCollection(limit: Int = 100, locale: String, order: [FooterOrder], preview: Boolean, skip: Int = 0, where: FooterFilter): FooterCollection
    header(id: String!, locale: String, preview: Boolean): Header
    headerCollection(limit: Int = 100, locale: String, order: [HeaderOrder], preview: Boolean, skip: Int = 0, where: HeaderFilter): HeaderCollection
    heroSection(id: String!, locale: String, preview: Boolean): HeroSection
    heroSectionCollection(limit: Int = 100, locale: String, order: [HeroSectionOrder], preview: Boolean, skip: Int = 0, where: HeroSectionFilter): HeroSectionCollection
    homepage(id: String!, locale: String, preview: Boolean): Homepage
    homepageCollection(limit: Int = 100, locale: String, order: [HomepageOrder], preview: Boolean, skip: Int = 0, where: HomepageFilter): HomepageCollection
    link(id: String!, locale: String, preview: Boolean): Link
    linkCollection(limit: Int = 100, locale: String, order: [LinkOrder], preview: Boolean, skip: Int = 0, where: LinkFilter): LinkCollection
    page(id: String!, locale: String, preview: Boolean): Page
    pageCollection(limit: Int = 100, locale: String, order: [PageOrder], preview: Boolean, skip: Int = 0, where: PageFilter): PageCollection
    partner(id: String!, locale: String, preview: Boolean): Partner
    partnerCollection(limit: Int = 100, locale: String, order: [PartnerOrder], preview: Boolean, skip: Int = 0, where: PartnerFilter): PartnerCollection
    partnersSection(id: String!, locale: String, preview: Boolean): PartnersSection
    partnersSectionCollection(limit: Int = 100, locale: String, order: [PartnersSectionOrder], preview: Boolean, skip: Int = 0, where: PartnersSectionFilter): PartnersSectionCollection
    portfolioSection(id: String!, locale: String, preview: Boolean): PortfolioSection
    portfolioSectionCollection(limit: Int = 100, locale: String, order: [PortfolioSectionOrder], preview: Boolean, skip: Int = 0, where: PortfolioSectionFilter): PortfolioSectionCollection
    project(id: String!, locale: String, preview: Boolean): Project
    projectCollection(limit: Int = 100, locale: String, order: [ProjectOrder], preview: Boolean, skip: Int = 0, where: ProjectFilter): ProjectCollection
    seoData(id: String!, locale: String, preview: Boolean): SeoData
    seoDataCollection(limit: Int = 100, locale: String, order: [SeoDataOrder], preview: Boolean, skip: Int = 0, where: SeoDataFilter): SeoDataCollection
    service(id: String!, locale: String, preview: Boolean): Service
    serviceCollection(limit: Int = 100, locale: String, order: [ServiceOrder], preview: Boolean, skip: Int = 0, where: ServiceFilter): ServiceCollection
    servicesSection(id: String!, locale: String, preview: Boolean): ServicesSection
    servicesSectionCollection(limit: Int = 100, locale: String, order: [ServicesSectionOrder], preview: Boolean, skip: Int = 0, where: ServicesSectionFilter): ServicesSectionCollection
    socialMedia(id: String!, locale: String, preview: Boolean): SocialMedia
    socialMediaCollection(limit: Int = 100, locale: String, order: [SocialMediaOrder], preview: Boolean, skip: Int = 0, where: SocialMediaFilter): SocialMediaCollection
    testimonial(id: String!, locale: String, preview: Boolean): Testimonial
    testimonialCollection(limit: Int = 100, locale: String, order: [TestimonialOrder], preview: Boolean, skip: Int = 0, where: TestimonialFilter): TestimonialCollection
    testimonialSection(id: String!, locale: String, preview: Boolean): TestimonialSection
    testimonialSectionCollection(limit: Int = 100, locale: String, order: [TestimonialSectionOrder], preview: Boolean, skip: Int = 0, where: TestimonialSectionFilter): TestimonialSectionCollection
    whatSection(id: String!, locale: String, preview: Boolean): WhatSection
    whatSectionCollection(limit: Int = 100, locale: String, order: [WhatSectionOrder], preview: Boolean, skip: Int = 0, where: WhatSectionFilter): WhatSectionCollection
}

"[See type definition](https://app.contentful.com/spaces/768h60wjczrv/content_types/seoData)"
type SeoData implements Entry {
    contentfulMetadata: ContentfulMetadata!
    linkedFrom(allowedLocales: [String]): SeoDataLinkingCollections
    metaDescription(locale: String): String
    metaKeywords(locale: String): [String]
    metaTitle(locale: String): String
    ogImage(locale: String, preview: Boolean): Asset
    sys: Sys!
}

type SeoDataCollection {
    items: [SeoData]!
    limit: Int!
    skip: Int!
    total: Int!
}

type SeoDataLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
    homepageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): HomepageCollection
    serviceCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ServiceCollection
}

"[See type definition](https://app.contentful.com/spaces/768h60wjczrv/content_types/service)"
type Service implements Entry {
    content(locale: String): ServiceContent
    contentfulMetadata: ContentfulMetadata!
    excerpt(locale: String): String
    featuredImage(locale: String, preview: Boolean): Asset
    linkedFrom(allowedLocales: [String]): ServiceLinkingCollections
    seoData(locale: String, preview: Boolean): SeoData
    slug(locale: String): String
    sys: Sys!
    title(locale: String): String
}

type ServiceCollection {
    items: [Service]!
    limit: Int!
    skip: Int!
    total: Int!
}

type ServiceContent {
    json: JSON!
    links: ServiceContentLinks!
}

type ServiceContentAssets {
    block: [Asset]!
    hyperlink: [Asset]!
}

type ServiceContentEntries {
    block: [Entry]!
    hyperlink: [Entry]!
    inline: [Entry]!
}

type ServiceContentLinks {
    assets: ServiceContentAssets!
    entries: ServiceContentEntries!
}

type ServiceLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
    servicesSectionCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ServicesSectionCollection
}

"[See type definition](https://app.contentful.com/spaces/768h60wjczrv/content_types/servicesSection)"
type ServicesSection implements Entry {
    contentfulMetadata: ContentfulMetadata!
    linkedFrom(allowedLocales: [String]): ServicesSectionLinkingCollections
    sectionName(locale: String): String
    servicesCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ServicesSectionServicesCollection
    sys: Sys!
    title(locale: String): ServicesSectionTitle
}

type ServicesSectionCollection {
    items: [ServicesSection]!
    limit: Int!
    skip: Int!
    total: Int!
}

type ServicesSectionLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
    homepageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): HomepageCollection
}

type ServicesSectionServicesCollection {
    items: [Service]!
    limit: Int!
    skip: Int!
    total: Int!
}

type ServicesSectionTitle {
    json: JSON!
    links: ServicesSectionTitleLinks!
}

type ServicesSectionTitleAssets {
    block: [Asset]!
    hyperlink: [Asset]!
}

type ServicesSectionTitleEntries {
    block: [Entry]!
    hyperlink: [Entry]!
    inline: [Entry]!
}

type ServicesSectionTitleLinks {
    assets: ServicesSectionTitleAssets!
    entries: ServicesSectionTitleEntries!
}

"[See type definition](https://app.contentful.com/spaces/768h60wjczrv/content_types/socialMedia)"
type SocialMedia implements Entry {
    account(locale: String): String
    contentfulMetadata: ContentfulMetadata!
    github(locale: String): String
    instagram(locale: String): String
    linkedFrom(allowedLocales: [String]): SocialMediaLinkingCollections
    linkedin(locale: String): String
    sys: Sys!
    twitter(locale: String): String
}

type SocialMediaCollection {
    items: [SocialMedia]!
    limit: Int!
    skip: Int!
    total: Int!
}

type SocialMediaLinkingCollections {
    aboutMeSectionCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): AboutMeSectionCollection
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
    footerCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): FooterCollection
}

type Sys {
    environmentId: String!
    firstPublishedAt: DateTime
    id: String!
    publishedAt: DateTime
    publishedVersion: Int
    spaceId: String!
}

"[See type definition](https://app.contentful.com/spaces/768h60wjczrv/content_types/testimonial)"
type Testimonial implements Entry {
    author(locale: String): String
    citation(locale: String): String
    contentfulMetadata: ContentfulMetadata!
    image(locale: String, preview: Boolean): Asset
    linkedFrom(allowedLocales: [String]): TestimonialLinkingCollections
    position(locale: String): String
    sys: Sys!
}

type TestimonialCollection {
    items: [Testimonial]!
    limit: Int!
    skip: Int!
    total: Int!
}

type TestimonialLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
    projectCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ProjectCollection
    testimonialSectionCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): TestimonialSectionCollection
}

"[See type definition](https://app.contentful.com/spaces/768h60wjczrv/content_types/testimonialSection)"
type TestimonialSection implements Entry {
    contentfulMetadata: ContentfulMetadata!
    linkedFrom(allowedLocales: [String]): TestimonialSectionLinkingCollections
    subtitle(locale: String): String
    sys: Sys!
    testimonialsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): TestimonialSectionTestimonialsCollection
    title(locale: String): TestimonialSectionTitle
}

type TestimonialSectionCollection {
    items: [TestimonialSection]!
    limit: Int!
    skip: Int!
    total: Int!
}

type TestimonialSectionLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
    homepageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): HomepageCollection
}

type TestimonialSectionTestimonialsCollection {
    items: [Testimonial]!
    limit: Int!
    skip: Int!
    total: Int!
}

type TestimonialSectionTitle {
    json: JSON!
    links: TestimonialSectionTitleLinks!
}

type TestimonialSectionTitleAssets {
    block: [Asset]!
    hyperlink: [Asset]!
}

type TestimonialSectionTitleEntries {
    block: [Entry]!
    hyperlink: [Entry]!
    inline: [Entry]!
}

type TestimonialSectionTitleLinks {
    assets: TestimonialSectionTitleAssets!
    entries: TestimonialSectionTitleEntries!
}

"[See type definition](https://app.contentful.com/spaces/768h60wjczrv/content_types/whatSection)"
type WhatSection implements Entry {
    buttonText(locale: String): String
    contentfulMetadata: ContentfulMetadata!
    description(locale: String): WhatSectionDescription
    linkedFrom(allowedLocales: [String]): WhatSectionLinkingCollections
    sectionDescription(locale: String): String
    sys: Sys!
    title(locale: String): WhatSectionTitle
}

type WhatSectionCollection {
    items: [WhatSection]!
    limit: Int!
    skip: Int!
    total: Int!
}

type WhatSectionDescription {
    json: JSON!
    links: WhatSectionDescriptionLinks!
}

type WhatSectionDescriptionAssets {
    block: [Asset]!
    hyperlink: [Asset]!
}

type WhatSectionDescriptionEntries {
    block: [Entry]!
    hyperlink: [Entry]!
    inline: [Entry]!
}

type WhatSectionDescriptionLinks {
    assets: WhatSectionDescriptionAssets!
    entries: WhatSectionDescriptionEntries!
}

type WhatSectionLinkingCollections {
    entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
    homepageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): HomepageCollection
}

type WhatSectionTitle {
    json: JSON!
    links: WhatSectionTitleLinks!
}

type WhatSectionTitleAssets {
    block: [Asset]!
    hyperlink: [Asset]!
}

type WhatSectionTitleEntries {
    block: [Entry]!
    hyperlink: [Entry]!
    inline: [Entry]!
}

type WhatSectionTitleLinks {
    assets: WhatSectionTitleAssets!
    entries: WhatSectionTitleEntries!
}

enum AboutMeSectionOrder {
    sectionDescription_ASC
    sectionDescription_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
}

enum AssetOrder {
    contentType_ASC
    contentType_DESC
    fileName_ASC
    fileName_DESC
    height_ASC
    height_DESC
    size_ASC
    size_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
    url_ASC
    url_DESC
    width_ASC
    width_DESC
}

enum ContactPageOrder {
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
    title_ASC
    title_DESC
}

enum ContactSectionOrder {
    formId_ASC
    formId_DESC
    name_ASC
    name_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
}

enum ContentOrder {
    contentfulName_ASC
    contentfulName_DESC
    primaryText_ASC
    primaryText_DESC
    secondaryText_ASC
    secondaryText_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
}

enum ContentSectionOrder {
    layout_ASC
    layout_DESC
    name_ASC
    name_DESC
    sectionTitle_ASC
    sectionTitle_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
}

enum CtaOrder {
    buttonText_ASC
    buttonText_DESC
    buttonUrl_ASC
    buttonUrl_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
}

enum CustomerOrder {
    customer_ASC
    customer_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
    url_ASC
    url_DESC
}

enum EntryOrder {
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
}

enum FooterOrder {
    companyAddress_ASC
    companyAddress_DESC
    companyName_ASC
    companyName_DESC
    companyPlace_ASC
    companyPlace_DESC
    email_ASC
    email_DESC
    footerVariant_ASC
    footerVariant_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
}

enum HeaderOrder {
    headerVariant_ASC
    headerVariant_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
}

enum HeroSectionOrder {
    primaryButtonText_ASC
    primaryButtonText_DESC
    primaryButtonUrl_ASC
    primaryButtonUrl_DESC
    secondaryButtonText_ASC
    secondaryButtonText_DESC
    secondaryButtonUrl_ASC
    secondaryButtonUrl_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
}

enum HomepageOrder {
    pageTitle_ASC
    pageTitle_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
}

enum ImageFormat {
    AVIF
    "JPG image format."
    JPG
    """

    Progressive JPG format stores multiple passes of an image in progressively higher detail.
    When a progressive image is loading, the viewer will first see a lower quality pixelated version which
    will gradually improve in detail, until the image is fully downloaded. This is to display an image as
    early as possible to make the layout look as designed.
    """
    JPG_PROGRESSIVE
    "PNG image format"
    PNG
    """

    8-bit PNG images support up to 256 colors and weigh less than the standard 24-bit PNG equivalent.
    The 8-bit PNG format is mostly used for simple images, such as icons or logos.
    """
    PNG8
    "WebP image format."
    WEBP
}

enum ImageResizeFocus {
    "Focus the resizing on the bottom."
    BOTTOM
    "Focus the resizing on the bottom left."
    BOTTOM_LEFT
    "Focus the resizing on the bottom right."
    BOTTOM_RIGHT
    "Focus the resizing on the center."
    CENTER
    "Focus the resizing on the largest face."
    FACE
    "Focus the resizing on the area containing all the faces."
    FACES
    "Focus the resizing on the left."
    LEFT
    "Focus the resizing on the right."
    RIGHT
    "Focus the resizing on the top."
    TOP
    "Focus the resizing on the top left."
    TOP_LEFT
    "Focus the resizing on the top right."
    TOP_RIGHT
}

enum ImageResizeStrategy {
    "Crops a part of the original image to fit into the specified dimensions."
    CROP
    "Resizes the image to the specified dimensions, cropping the image if needed."
    FILL
    "Resizes the image to fit into the specified dimensions."
    FIT
    """

    Resizes the image to the specified dimensions, padding the image if needed.
    Uses desired background color as padding color.
    """
    PAD
    "Resizes the image to the specified dimensions, changing the original aspect ratio if needed."
    SCALE
    "Creates a thumbnail from the image."
    THUMB
}

enum LinkOrder {
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
    text_ASC
    text_DESC
    url_ASC
    url_DESC
}

enum PageOrder {
    metaDescription_ASC
    metaDescription_DESC
    metaTitle_ASC
    metaTitle_DESC
    pageName_ASC
    pageName_DESC
    seoIndex_ASC
    seoIndex_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
    urlSlug_ASC
    urlSlug_DESC
}

enum PartnerOrder {
    company_ASC
    company_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
    url_ASC
    url_DESC
}

enum PartnersSectionOrder {
    sectionName_ASC
    sectionName_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
}

enum PortfolioSectionOrder {
    labelServices_ASC
    labelServices_DESC
    labelTechnologies_ASC
    labelTechnologies_DESC
    sectionDescription_ASC
    sectionDescription_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
}

enum ProjectOrder {
    date_ASC
    date_DESC
    slug_ASC
    slug_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
    title_ASC
    title_DESC
}

enum SeoDataOrder {
    metaDescription_ASC
    metaDescription_DESC
    metaTitle_ASC
    metaTitle_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
}

enum ServiceOrder {
    slug_ASC
    slug_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
    title_ASC
    title_DESC
}

enum ServicesSectionOrder {
    sectionName_ASC
    sectionName_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
}

enum SocialMediaOrder {
    account_ASC
    account_DESC
    github_ASC
    github_DESC
    instagram_ASC
    instagram_DESC
    linkedin_ASC
    linkedin_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
    twitter_ASC
    twitter_DESC
}

enum TestimonialOrder {
    author_ASC
    author_DESC
    position_ASC
    position_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
}

enum TestimonialSectionOrder {
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
}

enum WhatSectionOrder {
    buttonText_ASC
    buttonText_DESC
    sectionDescription_ASC
    sectionDescription_DESC
    sys_firstPublishedAt_ASC
    sys_firstPublishedAt_DESC
    sys_id_ASC
    sys_id_DESC
    sys_publishedAt_ASC
    sys_publishedAt_DESC
    sys_publishedVersion_ASC
    sys_publishedVersion_DESC
}

"""

A date-time string at UTC, such as 2007-12-03T10:15:30Z,
compliant with the 'date-time' format outlined in section 5.6 of
the RFC 3339 profile of the ISO 8601 standard for representation
of dates and times using the Gregorian calendar.
"""
scalar DateTime

"The 'Dimension' type represents dimensions as whole numeric values between `1` and `4000`."
scalar Dimension

"The 'HexColor' type represents color in `rgb:ffffff` string format."
scalar HexColor

"The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf)."
scalar JSON

"The 'Quality' type represents quality as whole numeric values between `1` and `100`."
scalar Quality

input AboutMeSectionFilter {
    AND: [AboutMeSectionFilter]
    OR: [AboutMeSectionFilter]
    contentfulMetadata: ContentfulMetadataFilter
    description_contains: String
    description_exists: Boolean
    description_not_contains: String
    image_exists: Boolean
    sectionDescription: String
    sectionDescription_contains: String
    sectionDescription_exists: Boolean
    sectionDescription_in: [String]
    sectionDescription_not: String
    sectionDescription_not_contains: String
    sectionDescription_not_in: [String]
    socialMedia: cfSocialMediaNestedFilter
    socialMedia_exists: Boolean
    sys: SysFilter
    title_contains: String
    title_exists: Boolean
    title_not_contains: String
}

input AssetFilter {
    AND: [AssetFilter]
    OR: [AssetFilter]
    contentType: String
    contentType_contains: String
    contentType_exists: Boolean
    contentType_in: [String]
    contentType_not: String
    contentType_not_contains: String
    contentType_not_in: [String]
    contentfulMetadata: ContentfulMetadataFilter
    description: String
    description_contains: String
    description_exists: Boolean
    description_in: [String]
    description_not: String
    description_not_contains: String
    description_not_in: [String]
    fileName: String
    fileName_contains: String
    fileName_exists: Boolean
    fileName_in: [String]
    fileName_not: String
    fileName_not_contains: String
    fileName_not_in: [String]
    height: Int
    height_exists: Boolean
    height_gt: Int
    height_gte: Int
    height_in: [Int]
    height_lt: Int
    height_lte: Int
    height_not: Int
    height_not_in: [Int]
    size: Int
    size_exists: Boolean
    size_gt: Int
    size_gte: Int
    size_in: [Int]
    size_lt: Int
    size_lte: Int
    size_not: Int
    size_not_in: [Int]
    sys: SysFilter
    title: String
    title_contains: String
    title_exists: Boolean
    title_in: [String]
    title_not: String
    title_not_contains: String
    title_not_in: [String]
    url: String
    url_contains: String
    url_exists: Boolean
    url_in: [String]
    url_not: String
    url_not_contains: String
    url_not_in: [String]
    width: Int
    width_exists: Boolean
    width_gt: Int
    width_gte: Int
    width_in: [Int]
    width_lt: Int
    width_lte: Int
    width_not: Int
    width_not_in: [Int]
}

input ContactPageFilter {
    AND: [ContactPageFilter]
    OR: [ContactPageFilter]
    contentfulMetadata: ContentfulMetadataFilter
    sys: SysFilter
    title: String
    title_contains: String
    title_exists: Boolean
    title_in: [String]
    title_not: String
    title_not_contains: String
    title_not_in: [String]
}

input ContactSectionFilter {
    AND: [ContactSectionFilter]
    OR: [ContactSectionFilter]
    contentfulMetadata: ContentfulMetadataFilter
    formId: String
    formId_contains: String
    formId_exists: Boolean
    formId_in: [String]
    formId_not: String
    formId_not_contains: String
    formId_not_in: [String]
    name: String
    name_contains: String
    name_exists: Boolean
    name_in: [String]
    name_not: String
    name_not_contains: String
    name_not_in: [String]
    subtitle: String
    subtitle_contains: String
    subtitle_exists: Boolean
    subtitle_in: [String]
    subtitle_not: String
    subtitle_not_contains: String
    subtitle_not_in: [String]
    sys: SysFilter
    title_contains: String
    title_exists: Boolean
    title_not_contains: String
}

input ContentFilter {
    AND: [ContentFilter]
    OR: [ContentFilter]
    contentfulMetadata: ContentfulMetadataFilter
    contentfulName: String
    contentfulName_contains: String
    contentfulName_exists: Boolean
    contentfulName_in: [String]
    contentfulName_not: String
    contentfulName_not_contains: String
    contentfulName_not_in: [String]
    description_contains: String
    description_exists: Boolean
    description_not_contains: String
    image_exists: Boolean
    primaryText: String
    primaryText_contains: String
    primaryText_exists: Boolean
    primaryText_in: [String]
    primaryText_not: String
    primaryText_not_contains: String
    primaryText_not_in: [String]
    secondaryText: String
    secondaryText_contains: String
    secondaryText_exists: Boolean
    secondaryText_in: [String]
    secondaryText_not: String
    secondaryText_not_contains: String
    secondaryText_not_in: [String]
    sys: SysFilter
}

input ContentSectionFilter {
    AND: [ContentSectionFilter]
    OR: [ContentSectionFilter]
    contentCollection_exists: Boolean
    contentfulMetadata: ContentfulMetadataFilter
    layout: String
    layout_contains: String
    layout_exists: Boolean
    layout_in: [String]
    layout_not: String
    layout_not_contains: String
    layout_not_in: [String]
    name: String
    name_contains: String
    name_exists: Boolean
    name_in: [String]
    name_not: String
    name_not_contains: String
    name_not_in: [String]
    sectionTitle: String
    sectionTitle_contains: String
    sectionTitle_exists: Boolean
    sectionTitle_in: [String]
    sectionTitle_not: String
    sectionTitle_not_contains: String
    sectionTitle_not_in: [String]
    sys: SysFilter
}

input ContentfulMetadataFilter {
    tags: ContentfulMetadataTagsFilter
    tags_exists: Boolean
}

input ContentfulMetadataTagsFilter {
    id_contains_all: [String]
    id_contains_none: [String]
    id_contains_some: [String]
}

input CtaFilter {
    AND: [CtaFilter]
    OR: [CtaFilter]
    buttonText: String
    buttonText_contains: String
    buttonText_exists: Boolean
    buttonText_in: [String]
    buttonText_not: String
    buttonText_not_contains: String
    buttonText_not_in: [String]
    buttonUrl: String
    buttonUrl_contains: String
    buttonUrl_exists: Boolean
    buttonUrl_in: [String]
    buttonUrl_not: String
    buttonUrl_not_contains: String
    buttonUrl_not_in: [String]
    contentfulMetadata: ContentfulMetadataFilter
    description: String
    description_contains: String
    description_exists: Boolean
    description_in: [String]
    description_not: String
    description_not_contains: String
    description_not_in: [String]
    image_exists: Boolean
    sys: SysFilter
    title_contains: String
    title_exists: Boolean
    title_not_contains: String
}

input CustomerFilter {
    AND: [CustomerFilter]
    OR: [CustomerFilter]
    contentfulMetadata: ContentfulMetadataFilter
    customer: String
    customer_contains: String
    customer_exists: Boolean
    customer_in: [String]
    customer_not: String
    customer_not_contains: String
    customer_not_in: [String]
    logo_exists: Boolean
    sys: SysFilter
    url: String
    url_contains: String
    url_exists: Boolean
    url_in: [String]
    url_not: String
    url_not_contains: String
    url_not_in: [String]
}

input EntryFilter {
    AND: [EntryFilter]
    OR: [EntryFilter]
    contentfulMetadata: ContentfulMetadataFilter
    sys: SysFilter
}

input FooterFilter {
    AND: [FooterFilter]
    OR: [FooterFilter]
    companyAddress: String
    companyAddress_contains: String
    companyAddress_exists: Boolean
    companyAddress_in: [String]
    companyAddress_not: String
    companyAddress_not_contains: String
    companyAddress_not_in: [String]
    companyName: String
    companyName_contains: String
    companyName_exists: Boolean
    companyName_in: [String]
    companyName_not: String
    companyName_not_contains: String
    companyName_not_in: [String]
    companyPlace: String
    companyPlace_contains: String
    companyPlace_exists: Boolean
    companyPlace_in: [String]
    companyPlace_not: String
    companyPlace_not_contains: String
    companyPlace_not_in: [String]
    contentfulMetadata: ContentfulMetadataFilter
    copyright: String
    copyright_contains: String
    copyright_exists: Boolean
    copyright_in: [String]
    copyright_not: String
    copyright_not_contains: String
    copyright_not_in: [String]
    email: String
    email_contains: String
    email_exists: Boolean
    email_in: [String]
    email_not: String
    email_not_contains: String
    email_not_in: [String]
    footerVariant: String
    footerVariant_contains: String
    footerVariant_exists: Boolean
    footerVariant_in: [String]
    footerVariant_not: String
    footerVariant_not_contains: String
    footerVariant_not_in: [String]
    linksCollection_exists: Boolean
    socialMedia: cfSocialMediaNestedFilter
    socialMedia_exists: Boolean
    sys: SysFilter
}

input HeaderFilter {
    AND: [HeaderFilter]
    OR: [HeaderFilter]
    contentfulMetadata: ContentfulMetadataFilter
    headerVariant: String
    headerVariant_contains: String
    headerVariant_exists: Boolean
    headerVariant_in: [String]
    headerVariant_not: String
    headerVariant_not_contains: String
    headerVariant_not_in: [String]
    linksCollection_exists: Boolean
    logo_exists: Boolean
    sys: SysFilter
}

input HeroSectionFilter {
    AND: [HeroSectionFilter]
    OR: [HeroSectionFilter]
    backgroundImage_exists: Boolean
    contentfulMetadata: ContentfulMetadataFilter
    primaryButtonText: String
    primaryButtonText_contains: String
    primaryButtonText_exists: Boolean
    primaryButtonText_in: [String]
    primaryButtonText_not: String
    primaryButtonText_not_contains: String
    primaryButtonText_not_in: [String]
    primaryButtonUrl: String
    primaryButtonUrl_contains: String
    primaryButtonUrl_exists: Boolean
    primaryButtonUrl_in: [String]
    primaryButtonUrl_not: String
    primaryButtonUrl_not_contains: String
    primaryButtonUrl_not_in: [String]
    secondaryButtonText: String
    secondaryButtonText_contains: String
    secondaryButtonText_exists: Boolean
    secondaryButtonText_in: [String]
    secondaryButtonText_not: String
    secondaryButtonText_not_contains: String
    secondaryButtonText_not_in: [String]
    secondaryButtonUrl: String
    secondaryButtonUrl_contains: String
    secondaryButtonUrl_exists: Boolean
    secondaryButtonUrl_in: [String]
    secondaryButtonUrl_not: String
    secondaryButtonUrl_not_contains: String
    secondaryButtonUrl_not_in: [String]
    subtitle: String
    subtitle_contains: String
    subtitle_exists: Boolean
    subtitle_in: [String]
    subtitle_not: String
    subtitle_not_contains: String
    subtitle_not_in: [String]
    sys: SysFilter
    title_contains: String
    title_exists: Boolean
    title_not_contains: String
}

input HomepageFilter {
    AND: [HomepageFilter]
    OR: [HomepageFilter]
    aboutMe: cfAboutMeSectionNestedFilter
    aboutMe_exists: Boolean
    contactSection: cfContactSectionNestedFilter
    contactSection_exists: Boolean
    contentfulMetadata: ContentfulMetadataFilter
    cta: cfCtaNestedFilter
    cta_exists: Boolean
    footer: cfFooterNestedFilter
    footer_exists: Boolean
    header: cfHeaderNestedFilter
    header_exists: Boolean
    heroSection: cfHeroSectionNestedFilter
    heroSection_exists: Boolean
    pageTitle: String
    pageTitle_contains: String
    pageTitle_exists: Boolean
    pageTitle_in: [String]
    pageTitle_not: String
    pageTitle_not_contains: String
    pageTitle_not_in: [String]
    partnersSection: cfPartnersSectionNestedFilter
    partnersSection_exists: Boolean
    portfolioSection: cfPortfolioSectionNestedFilter
    portfolioSection_exists: Boolean
    seoData: cfSeoDataNestedFilter
    seoData_exists: Boolean
    servicesSection: cfServicesSectionNestedFilter
    servicesSection_exists: Boolean
    sys: SysFilter
    testimonialSection: cfTestimonialSectionNestedFilter
    testimonialSection_exists: Boolean
    whatIDo: cfWhatSectionNestedFilter
    whatIDo_exists: Boolean
}

input ImageTransformOptions {
    """

    Desired background color, used with corner radius or `PAD` resize strategy.
    Defaults to transparent (for `PNG`, `PNG8` and `WEBP`) or white (for `JPG` and `JPG_PROGRESSIVE`).
    """
    backgroundColor: HexColor
    """

    Desired corner radius in pixels.
    Results in an image with rounded corners (pass `-1` for a full circle/ellipse).
    Defaults to `0`. Uses desired background color as padding color,
    unless the format is `JPG` or `JPG_PROGRESSIVE` and resize strategy is `PAD`, then defaults to white.
    """
    cornerRadius: Int
    "Desired image format. Defaults to the original image format."
    format: ImageFormat
    "Desired height in pixels. Defaults to the original image height."
    height: Dimension
    """

    Desired quality of the image in percents.
    Used for `PNG8`, `JPG`, `JPG_PROGRESSIVE` and `WEBP` formats.
    """
    quality: Quality
    "Desired resize focus area. Defaults to `CENTER`."
    resizeFocus: ImageResizeFocus
    "Desired resize strategy. Defaults to `FIT`."
    resizeStrategy: ImageResizeStrategy
    "Desired width in pixels. Defaults to the original image width."
    width: Dimension
}

input LinkFilter {
    AND: [LinkFilter]
    OR: [LinkFilter]
    contentfulMetadata: ContentfulMetadataFilter
    sys: SysFilter
    text: String
    text_contains: String
    text_exists: Boolean
    text_in: [String]
    text_not: String
    text_not_contains: String
    text_not_in: [String]
    url: String
    url_contains: String
    url_exists: Boolean
    url_in: [String]
    url_not: String
    url_not_contains: String
    url_not_in: [String]
}

input PageFilter {
    AND: [PageFilter]
    OR: [PageFilter]
    contentSectionsCollection_exists: Boolean
    contentfulMetadata: ContentfulMetadataFilter
    metaDescription: String
    metaDescription_contains: String
    metaDescription_exists: Boolean
    metaDescription_in: [String]
    metaDescription_not: String
    metaDescription_not_contains: String
    metaDescription_not_in: [String]
    metaTitle: String
    metaTitle_contains: String
    metaTitle_exists: Boolean
    metaTitle_in: [String]
    metaTitle_not: String
    metaTitle_not_contains: String
    metaTitle_not_in: [String]
    pageName: String
    pageName_contains: String
    pageName_exists: Boolean
    pageName_in: [String]
    pageName_not: String
    pageName_not_contains: String
    pageName_not_in: [String]
    seoIndex: Boolean
    seoIndex_exists: Boolean
    seoIndex_not: Boolean
    socialMediaImage_exists: Boolean
    sys: SysFilter
    urlSlug: String
    urlSlug_contains: String
    urlSlug_exists: Boolean
    urlSlug_in: [String]
    urlSlug_not: String
    urlSlug_not_contains: String
    urlSlug_not_in: [String]
}

input PartnerFilter {
    AND: [PartnerFilter]
    OR: [PartnerFilter]
    company: String
    company_contains: String
    company_exists: Boolean
    company_in: [String]
    company_not: String
    company_not_contains: String
    company_not_in: [String]
    contentfulMetadata: ContentfulMetadataFilter
    description: String
    description_contains: String
    description_exists: Boolean
    description_in: [String]
    description_not: String
    description_not_contains: String
    description_not_in: [String]
    logo_exists: Boolean
    sys: SysFilter
    url: String
    url_contains: String
    url_exists: Boolean
    url_in: [String]
    url_not: String
    url_not_contains: String
    url_not_in: [String]
}

input PartnersSectionFilter {
    AND: [PartnersSectionFilter]
    OR: [PartnersSectionFilter]
    contentfulMetadata: ContentfulMetadataFilter
    partnersCollection_exists: Boolean
    sectionName: String
    sectionName_contains: String
    sectionName_exists: Boolean
    sectionName_in: [String]
    sectionName_not: String
    sectionName_not_contains: String
    sectionName_not_in: [String]
    subtitle: String
    subtitle_contains: String
    subtitle_exists: Boolean
    subtitle_in: [String]
    subtitle_not: String
    subtitle_not_contains: String
    subtitle_not_in: [String]
    sys: SysFilter
    title_contains: String
    title_exists: Boolean
    title_not_contains: String
}

input PortfolioSectionFilter {
    AND: [PortfolioSectionFilter]
    OR: [PortfolioSectionFilter]
    contentfulMetadata: ContentfulMetadataFilter
    labelServices: String
    labelServices_contains: String
    labelServices_exists: Boolean
    labelServices_in: [String]
    labelServices_not: String
    labelServices_not_contains: String
    labelServices_not_in: [String]
    labelTechnologies: String
    labelTechnologies_contains: String
    labelTechnologies_exists: Boolean
    labelTechnologies_in: [String]
    labelTechnologies_not: String
    labelTechnologies_not_contains: String
    labelTechnologies_not_in: [String]
    projectsCollection_exists: Boolean
    sectionDescription: String
    sectionDescription_contains: String
    sectionDescription_exists: Boolean
    sectionDescription_in: [String]
    sectionDescription_not: String
    sectionDescription_not_contains: String
    sectionDescription_not_in: [String]
    sys: SysFilter
    title_contains: String
    title_exists: Boolean
    title_not_contains: String
}

input ProjectFilter {
    AND: [ProjectFilter]
    OR: [ProjectFilter]
    content_contains: String
    content_exists: Boolean
    content_not_contains: String
    contentfulMetadata: ContentfulMetadataFilter
    customer: cfCustomerNestedFilter
    customer_exists: Boolean
    date: DateTime
    date_exists: Boolean
    date_gt: DateTime
    date_gte: DateTime
    date_in: [DateTime]
    date_lt: DateTime
    date_lte: DateTime
    date_not: DateTime
    date_not_in: [DateTime]
    excerpt: String
    excerpt_contains: String
    excerpt_exists: Boolean
    excerpt_in: [String]
    excerpt_not: String
    excerpt_not_contains: String
    excerpt_not_in: [String]
    image_exists: Boolean
    services_contains_all: [String]
    services_contains_none: [String]
    services_contains_some: [String]
    services_exists: Boolean
    slug: String
    slug_contains: String
    slug_exists: Boolean
    slug_in: [String]
    slug_not: String
    slug_not_contains: String
    slug_not_in: [String]
    sys: SysFilter
    technologies_contains_all: [String]
    technologies_contains_none: [String]
    technologies_contains_some: [String]
    technologies_exists: Boolean
    testimonialsCollection_exists: Boolean
    title: String
    title_contains: String
    title_exists: Boolean
    title_in: [String]
    title_not: String
    title_not_contains: String
    title_not_in: [String]
}

input SeoDataFilter {
    AND: [SeoDataFilter]
    OR: [SeoDataFilter]
    contentfulMetadata: ContentfulMetadataFilter
    metaDescription: String
    metaDescription_contains: String
    metaDescription_exists: Boolean
    metaDescription_in: [String]
    metaDescription_not: String
    metaDescription_not_contains: String
    metaDescription_not_in: [String]
    metaKeywords_contains_all: [String]
    metaKeywords_contains_none: [String]
    metaKeywords_contains_some: [String]
    metaKeywords_exists: Boolean
    metaTitle: String
    metaTitle_contains: String
    metaTitle_exists: Boolean
    metaTitle_in: [String]
    metaTitle_not: String
    metaTitle_not_contains: String
    metaTitle_not_in: [String]
    ogImage_exists: Boolean
    sys: SysFilter
}

input ServiceFilter {
    AND: [ServiceFilter]
    OR: [ServiceFilter]
    content_contains: String
    content_exists: Boolean
    content_not_contains: String
    contentfulMetadata: ContentfulMetadataFilter
    excerpt: String
    excerpt_contains: String
    excerpt_exists: Boolean
    excerpt_in: [String]
    excerpt_not: String
    excerpt_not_contains: String
    excerpt_not_in: [String]
    featuredImage_exists: Boolean
    seoData: cfSeoDataNestedFilter
    seoData_exists: Boolean
    slug: String
    slug_contains: String
    slug_exists: Boolean
    slug_in: [String]
    slug_not: String
    slug_not_contains: String
    slug_not_in: [String]
    sys: SysFilter
    title: String
    title_contains: String
    title_exists: Boolean
    title_in: [String]
    title_not: String
    title_not_contains: String
    title_not_in: [String]
}

input ServicesSectionFilter {
    AND: [ServicesSectionFilter]
    OR: [ServicesSectionFilter]
    contentfulMetadata: ContentfulMetadataFilter
    sectionName: String
    sectionName_contains: String
    sectionName_exists: Boolean
    sectionName_in: [String]
    sectionName_not: String
    sectionName_not_contains: String
    sectionName_not_in: [String]
    servicesCollection_exists: Boolean
    sys: SysFilter
    title_contains: String
    title_exists: Boolean
    title_not_contains: String
}

input SocialMediaFilter {
    AND: [SocialMediaFilter]
    OR: [SocialMediaFilter]
    account: String
    account_contains: String
    account_exists: Boolean
    account_in: [String]
    account_not: String
    account_not_contains: String
    account_not_in: [String]
    contentfulMetadata: ContentfulMetadataFilter
    github: String
    github_contains: String
    github_exists: Boolean
    github_in: [String]
    github_not: String
    github_not_contains: String
    github_not_in: [String]
    instagram: String
    instagram_contains: String
    instagram_exists: Boolean
    instagram_in: [String]
    instagram_not: String
    instagram_not_contains: String
    instagram_not_in: [String]
    linkedin: String
    linkedin_contains: String
    linkedin_exists: Boolean
    linkedin_in: [String]
    linkedin_not: String
    linkedin_not_contains: String
    linkedin_not_in: [String]
    sys: SysFilter
    twitter: String
    twitter_contains: String
    twitter_exists: Boolean
    twitter_in: [String]
    twitter_not: String
    twitter_not_contains: String
    twitter_not_in: [String]
}

input SysFilter {
    firstPublishedAt: DateTime
    firstPublishedAt_exists: Boolean
    firstPublishedAt_gt: DateTime
    firstPublishedAt_gte: DateTime
    firstPublishedAt_in: [DateTime]
    firstPublishedAt_lt: DateTime
    firstPublishedAt_lte: DateTime
    firstPublishedAt_not: DateTime
    firstPublishedAt_not_in: [DateTime]
    id: String
    id_contains: String
    id_exists: Boolean
    id_in: [String]
    id_not: String
    id_not_contains: String
    id_not_in: [String]
    publishedAt: DateTime
    publishedAt_exists: Boolean
    publishedAt_gt: DateTime
    publishedAt_gte: DateTime
    publishedAt_in: [DateTime]
    publishedAt_lt: DateTime
    publishedAt_lte: DateTime
    publishedAt_not: DateTime
    publishedAt_not_in: [DateTime]
    publishedVersion: Float
    publishedVersion_exists: Boolean
    publishedVersion_gt: Float
    publishedVersion_gte: Float
    publishedVersion_in: [Float]
    publishedVersion_lt: Float
    publishedVersion_lte: Float
    publishedVersion_not: Float
    publishedVersion_not_in: [Float]
}

input TestimonialFilter {
    AND: [TestimonialFilter]
    OR: [TestimonialFilter]
    author: String
    author_contains: String
    author_exists: Boolean
    author_in: [String]
    author_not: String
    author_not_contains: String
    author_not_in: [String]
    citation: String
    citation_contains: String
    citation_exists: Boolean
    citation_in: [String]
    citation_not: String
    citation_not_contains: String
    citation_not_in: [String]
    contentfulMetadata: ContentfulMetadataFilter
    image_exists: Boolean
    position: String
    position_contains: String
    position_exists: Boolean
    position_in: [String]
    position_not: String
    position_not_contains: String
    position_not_in: [String]
    sys: SysFilter
}

input TestimonialSectionFilter {
    AND: [TestimonialSectionFilter]
    OR: [TestimonialSectionFilter]
    contentfulMetadata: ContentfulMetadataFilter
    subtitle: String
    subtitle_contains: String
    subtitle_exists: Boolean
    subtitle_in: [String]
    subtitle_not: String
    subtitle_not_contains: String
    subtitle_not_in: [String]
    sys: SysFilter
    testimonialsCollection_exists: Boolean
    title_contains: String
    title_exists: Boolean
    title_not_contains: String
}

input WhatSectionFilter {
    AND: [WhatSectionFilter]
    OR: [WhatSectionFilter]
    buttonText: String
    buttonText_contains: String
    buttonText_exists: Boolean
    buttonText_in: [String]
    buttonText_not: String
    buttonText_not_contains: String
    buttonText_not_in: [String]
    contentfulMetadata: ContentfulMetadataFilter
    description_contains: String
    description_exists: Boolean
    description_not_contains: String
    sectionDescription: String
    sectionDescription_contains: String
    sectionDescription_exists: Boolean
    sectionDescription_in: [String]
    sectionDescription_not: String
    sectionDescription_not_contains: String
    sectionDescription_not_in: [String]
    sys: SysFilter
    title_contains: String
    title_exists: Boolean
    title_not_contains: String
}

input cfAboutMeSectionNestedFilter {
    AND: [cfAboutMeSectionNestedFilter]
    OR: [cfAboutMeSectionNestedFilter]
    contentfulMetadata: ContentfulMetadataFilter
    description_contains: String
    description_exists: Boolean
    description_not_contains: String
    image_exists: Boolean
    sectionDescription: String
    sectionDescription_contains: String
    sectionDescription_exists: Boolean
    sectionDescription_in: [String]
    sectionDescription_not: String
    sectionDescription_not_contains: String
    sectionDescription_not_in: [String]
    socialMedia_exists: Boolean
    sys: SysFilter
    title_contains: String
    title_exists: Boolean
    title_not_contains: String
}

input cfContactSectionNestedFilter {
    AND: [cfContactSectionNestedFilter]
    OR: [cfContactSectionNestedFilter]
    contentfulMetadata: ContentfulMetadataFilter
    formId: String
    formId_contains: String
    formId_exists: Boolean
    formId_in: [String]
    formId_not: String
    formId_not_contains: String
    formId_not_in: [String]
    name: String
    name_contains: String
    name_exists: Boolean
    name_in: [String]
    name_not: String
    name_not_contains: String
    name_not_in: [String]
    subtitle: String
    subtitle_contains: String
    subtitle_exists: Boolean
    subtitle_in: [String]
    subtitle_not: String
    subtitle_not_contains: String
    subtitle_not_in: [String]
    sys: SysFilter
    title_contains: String
    title_exists: Boolean
    title_not_contains: String
}

input cfCtaNestedFilter {
    AND: [cfCtaNestedFilter]
    OR: [cfCtaNestedFilter]
    buttonText: String
    buttonText_contains: String
    buttonText_exists: Boolean
    buttonText_in: [String]
    buttonText_not: String
    buttonText_not_contains: String
    buttonText_not_in: [String]
    buttonUrl: String
    buttonUrl_contains: String
    buttonUrl_exists: Boolean
    buttonUrl_in: [String]
    buttonUrl_not: String
    buttonUrl_not_contains: String
    buttonUrl_not_in: [String]
    contentfulMetadata: ContentfulMetadataFilter
    description: String
    description_contains: String
    description_exists: Boolean
    description_in: [String]
    description_not: String
    description_not_contains: String
    description_not_in: [String]
    image_exists: Boolean
    sys: SysFilter
    title_contains: String
    title_exists: Boolean
    title_not_contains: String
}

input cfCustomerNestedFilter {
    AND: [cfCustomerNestedFilter]
    OR: [cfCustomerNestedFilter]
    contentfulMetadata: ContentfulMetadataFilter
    customer: String
    customer_contains: String
    customer_exists: Boolean
    customer_in: [String]
    customer_not: String
    customer_not_contains: String
    customer_not_in: [String]
    logo_exists: Boolean
    sys: SysFilter
    url: String
    url_contains: String
    url_exists: Boolean
    url_in: [String]
    url_not: String
    url_not_contains: String
    url_not_in: [String]
}

input cfFooterNestedFilter {
    AND: [cfFooterNestedFilter]
    OR: [cfFooterNestedFilter]
    companyAddress: String
    companyAddress_contains: String
    companyAddress_exists: Boolean
    companyAddress_in: [String]
    companyAddress_not: String
    companyAddress_not_contains: String
    companyAddress_not_in: [String]
    companyName: String
    companyName_contains: String
    companyName_exists: Boolean
    companyName_in: [String]
    companyName_not: String
    companyName_not_contains: String
    companyName_not_in: [String]
    companyPlace: String
    companyPlace_contains: String
    companyPlace_exists: Boolean
    companyPlace_in: [String]
    companyPlace_not: String
    companyPlace_not_contains: String
    companyPlace_not_in: [String]
    contentfulMetadata: ContentfulMetadataFilter
    copyright: String
    copyright_contains: String
    copyright_exists: Boolean
    copyright_in: [String]
    copyright_not: String
    copyright_not_contains: String
    copyright_not_in: [String]
    email: String
    email_contains: String
    email_exists: Boolean
    email_in: [String]
    email_not: String
    email_not_contains: String
    email_not_in: [String]
    footerVariant: String
    footerVariant_contains: String
    footerVariant_exists: Boolean
    footerVariant_in: [String]
    footerVariant_not: String
    footerVariant_not_contains: String
    footerVariant_not_in: [String]
    linksCollection_exists: Boolean
    socialMedia_exists: Boolean
    sys: SysFilter
}

input cfHeaderNestedFilter {
    AND: [cfHeaderNestedFilter]
    OR: [cfHeaderNestedFilter]
    contentfulMetadata: ContentfulMetadataFilter
    headerVariant: String
    headerVariant_contains: String
    headerVariant_exists: Boolean
    headerVariant_in: [String]
    headerVariant_not: String
    headerVariant_not_contains: String
    headerVariant_not_in: [String]
    linksCollection_exists: Boolean
    logo_exists: Boolean
    sys: SysFilter
}

input cfHeroSectionNestedFilter {
    AND: [cfHeroSectionNestedFilter]
    OR: [cfHeroSectionNestedFilter]
    backgroundImage_exists: Boolean
    contentfulMetadata: ContentfulMetadataFilter
    primaryButtonText: String
    primaryButtonText_contains: String
    primaryButtonText_exists: Boolean
    primaryButtonText_in: [String]
    primaryButtonText_not: String
    primaryButtonText_not_contains: String
    primaryButtonText_not_in: [String]
    primaryButtonUrl: String
    primaryButtonUrl_contains: String
    primaryButtonUrl_exists: Boolean
    primaryButtonUrl_in: [String]
    primaryButtonUrl_not: String
    primaryButtonUrl_not_contains: String
    primaryButtonUrl_not_in: [String]
    secondaryButtonText: String
    secondaryButtonText_contains: String
    secondaryButtonText_exists: Boolean
    secondaryButtonText_in: [String]
    secondaryButtonText_not: String
    secondaryButtonText_not_contains: String
    secondaryButtonText_not_in: [String]
    secondaryButtonUrl: String
    secondaryButtonUrl_contains: String
    secondaryButtonUrl_exists: Boolean
    secondaryButtonUrl_in: [String]
    secondaryButtonUrl_not: String
    secondaryButtonUrl_not_contains: String
    secondaryButtonUrl_not_in: [String]
    subtitle: String
    subtitle_contains: String
    subtitle_exists: Boolean
    subtitle_in: [String]
    subtitle_not: String
    subtitle_not_contains: String
    subtitle_not_in: [String]
    sys: SysFilter
    title_contains: String
    title_exists: Boolean
    title_not_contains: String
}

input cfPartnersSectionNestedFilter {
    AND: [cfPartnersSectionNestedFilter]
    OR: [cfPartnersSectionNestedFilter]
    contentfulMetadata: ContentfulMetadataFilter
    partnersCollection_exists: Boolean
    sectionName: String
    sectionName_contains: String
    sectionName_exists: Boolean
    sectionName_in: [String]
    sectionName_not: String
    sectionName_not_contains: String
    sectionName_not_in: [String]
    subtitle: String
    subtitle_contains: String
    subtitle_exists: Boolean
    subtitle_in: [String]
    subtitle_not: String
    subtitle_not_contains: String
    subtitle_not_in: [String]
    sys: SysFilter
    title_contains: String
    title_exists: Boolean
    title_not_contains: String
}

input cfPortfolioSectionNestedFilter {
    AND: [cfPortfolioSectionNestedFilter]
    OR: [cfPortfolioSectionNestedFilter]
    contentfulMetadata: ContentfulMetadataFilter
    labelServices: String
    labelServices_contains: String
    labelServices_exists: Boolean
    labelServices_in: [String]
    labelServices_not: String
    labelServices_not_contains: String
    labelServices_not_in: [String]
    labelTechnologies: String
    labelTechnologies_contains: String
    labelTechnologies_exists: Boolean
    labelTechnologies_in: [String]
    labelTechnologies_not: String
    labelTechnologies_not_contains: String
    labelTechnologies_not_in: [String]
    projectsCollection_exists: Boolean
    sectionDescription: String
    sectionDescription_contains: String
    sectionDescription_exists: Boolean
    sectionDescription_in: [String]
    sectionDescription_not: String
    sectionDescription_not_contains: String
    sectionDescription_not_in: [String]
    sys: SysFilter
    title_contains: String
    title_exists: Boolean
    title_not_contains: String
}

input cfSeoDataNestedFilter {
    AND: [cfSeoDataNestedFilter]
    OR: [cfSeoDataNestedFilter]
    contentfulMetadata: ContentfulMetadataFilter
    metaDescription: String
    metaDescription_contains: String
    metaDescription_exists: Boolean
    metaDescription_in: [String]
    metaDescription_not: String
    metaDescription_not_contains: String
    metaDescription_not_in: [String]
    metaKeywords_contains_all: [String]
    metaKeywords_contains_none: [String]
    metaKeywords_contains_some: [String]
    metaKeywords_exists: Boolean
    metaTitle: String
    metaTitle_contains: String
    metaTitle_exists: Boolean
    metaTitle_in: [String]
    metaTitle_not: String
    metaTitle_not_contains: String
    metaTitle_not_in: [String]
    ogImage_exists: Boolean
    sys: SysFilter
}

input cfServicesSectionNestedFilter {
    AND: [cfServicesSectionNestedFilter]
    OR: [cfServicesSectionNestedFilter]
    contentfulMetadata: ContentfulMetadataFilter
    sectionName: String
    sectionName_contains: String
    sectionName_exists: Boolean
    sectionName_in: [String]
    sectionName_not: String
    sectionName_not_contains: String
    sectionName_not_in: [String]
    servicesCollection_exists: Boolean
    sys: SysFilter
    title_contains: String
    title_exists: Boolean
    title_not_contains: String
}

input cfSocialMediaNestedFilter {
    AND: [cfSocialMediaNestedFilter]
    OR: [cfSocialMediaNestedFilter]
    account: String
    account_contains: String
    account_exists: Boolean
    account_in: [String]
    account_not: String
    account_not_contains: String
    account_not_in: [String]
    contentfulMetadata: ContentfulMetadataFilter
    github: String
    github_contains: String
    github_exists: Boolean
    github_in: [String]
    github_not: String
    github_not_contains: String
    github_not_in: [String]
    instagram: String
    instagram_contains: String
    instagram_exists: Boolean
    instagram_in: [String]
    instagram_not: String
    instagram_not_contains: String
    instagram_not_in: [String]
    linkedin: String
    linkedin_contains: String
    linkedin_exists: Boolean
    linkedin_in: [String]
    linkedin_not: String
    linkedin_not_contains: String
    linkedin_not_in: [String]
    sys: SysFilter
    twitter: String
    twitter_contains: String
    twitter_exists: Boolean
    twitter_in: [String]
    twitter_not: String
    twitter_not_contains: String
    twitter_not_in: [String]
}

input cfTestimonialSectionNestedFilter {
    AND: [cfTestimonialSectionNestedFilter]
    OR: [cfTestimonialSectionNestedFilter]
    contentfulMetadata: ContentfulMetadataFilter
    subtitle: String
    subtitle_contains: String
    subtitle_exists: Boolean
    subtitle_in: [String]
    subtitle_not: String
    subtitle_not_contains: String
    subtitle_not_in: [String]
    sys: SysFilter
    testimonialsCollection_exists: Boolean
    title_contains: String
    title_exists: Boolean
    title_not_contains: String
}

input cfWhatSectionNestedFilter {
    AND: [cfWhatSectionNestedFilter]
    OR: [cfWhatSectionNestedFilter]
    buttonText: String
    buttonText_contains: String
    buttonText_exists: Boolean
    buttonText_in: [String]
    buttonText_not: String
    buttonText_not_contains: String
    buttonText_not_in: [String]
    contentfulMetadata: ContentfulMetadataFilter
    description_contains: String
    description_exists: Boolean
    description_not_contains: String
    sectionDescription: String
    sectionDescription_contains: String
    sectionDescription_exists: Boolean
    sectionDescription_in: [String]
    sectionDescription_not: String
    sectionDescription_not_contains: String
    sectionDescription_not_in: [String]
    sys: SysFilter
    title_contains: String
    title_exists: Boolean
    title_not_contains: String
}
